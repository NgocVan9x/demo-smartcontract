{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_signer",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousSigner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newSigner",
          "type": "address"
        }
      ],
      "name": "SignerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenWithdrewByOwner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "TokenWithdrewWithSignature",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_messageHash",
          "type": "bytes32"
        }
      ],
      "name": "getEthSignedMessageHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        }
      ],
      "name": "getMessageHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_ethSignedMessageHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "recoverSigner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "sig",
          "type": "bytes"
        }
      ],
      "name": "splitSignature",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newSigner",
          "type": "address"
        }
      ],
      "name": "updateSigner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTokenByOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "withdrawTokenWithSignature",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/blokparti/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/access/Ownable.sol",
    "1": "/Users/blokparti/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC20/IERC20.sol",
    "2": "/Users/blokparti/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/Context.sol",
    "3": "contracts/LabradoWallet.sol"
  },
  "ast": {
    "absolutePath": "contracts/LabradoWallet.sol",
    "exportedSymbols": {
      "Context": [
        489
      ],
      "IERC20": [
        467
      ],
      "LabradoWallet": [
        284
      ],
      "Ownable": [
        389
      ]
    },
    "id": 285,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "64:23:3"
      },
      {
        "absolutePath": "/Users/blokparti/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 285,
        "sourceUnit": 468,
        "src": "89:56:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/blokparti/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 285,
        "sourceUnit": 390,
        "src": "146:52:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 389,
              "src": "226:7:3"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "226:7:3"
          }
        ],
        "canonicalName": "LabradoWallet",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 284,
        "linearizedBaseContracts": [
          284,
          389,
          489
        ],
        "name": "LabradoWallet",
        "nameLocation": "209:13:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 7,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "255:5:3",
            "nodeType": "VariableDeclaration",
            "scope": 284,
            "src": "240:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "240:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11,
            "mutability": "mutable",
            "name": "usedNonce",
            "nameLocation": "299:9:3",
            "nodeType": "VariableDeclaration",
            "scope": 284,
            "src": "266:42:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
              "typeString": "mapping(uint256 => bool)"
            },
            "typeName": {
              "id": 10,
              "keyType": {
                "id": 8,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "274:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "266:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                "typeString": "mapping(uint256 => bool)"
              },
              "valueType": {
                "id": 9,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "285:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 13,
            "mutability": "mutable",
            "name": "signer",
            "nameLocation": "330:6:3",
            "nodeType": "VariableDeclaration",
            "scope": 284,
            "src": "314:22:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 12,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "314:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 21,
            "name": "TokenWithdrewWithSignature",
            "nameLocation": "349:26:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "401:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "385:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "385:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "427:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "419:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "419:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "459:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "443:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "443:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "375:95:3"
            },
            "src": "343:128:3"
          },
          {
            "anonymous": false,
            "id": 27,
            "name": "TokenWithdrewByOwner",
            "nameLocation": "482:20:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "519:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "503:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "503:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "537:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "529:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "529:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "502:42:3"
            },
            "src": "476:69:3"
          },
          {
            "anonymous": false,
            "id": 33,
            "name": "SignerUpdated",
            "nameLocation": "556:13:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "previousSigner",
                  "nameLocation": "595:14:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "579:30:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "579:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newSigner",
                  "nameLocation": "635:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "619:25:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "619:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "569:81:3"
            },
            "src": "550:101:3"
          },
          {
            "body": {
              "id": 48,
              "nodeType": "Block",
              "src": "702:57:3",
              "statements": [
                {
                  "expression": {
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40,
                      "name": "signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "712:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 41,
                      "name": "_signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "721:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "712:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "712:16:3"
                },
                {
                  "expression": {
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "738:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 45,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "746:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "738:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 47,
                  "nodeType": "ExpressionStatement",
                  "src": "738:14:3"
                }
              ]
            },
            "id": 49,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "677:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 49,
                  "src": "669:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "669:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37,
                  "mutability": "mutable",
                  "name": "_signer",
                  "nameLocation": "693:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 49,
                  "src": "685:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "685:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "668:33:3"
            },
            "returnParameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "702:0:3"
            },
            "scope": 284,
            "src": "657:102:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 79,
              "nodeType": "Block",
              "src": "824:199:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 62,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 57,
                          "name": "_newSigner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51,
                          "src": "842:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 60,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "864:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 59,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "856:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 58,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "856:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 61,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "856:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "842:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6577206f776e657220697320746865207a65726f2061646472657373",
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "868:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a24ccaf80de4e51183010336d59d19649379808a6fca9f361b561895a5b6d940",
                          "typeString": "literal_string \"New owner is the zero address\""
                        },
                        "value": "New owner is the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a24ccaf80de4e51183010336d59d19649379808a6fca9f361b561895a5b6d940",
                          "typeString": "literal_string \"New owner is the zero address\""
                        }
                      ],
                      "id": 56,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "834:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "834:66:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65,
                  "nodeType": "ExpressionStatement",
                  "src": "834:66:3"
                },
                {
                  "assignments": [
                    67
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67,
                      "mutability": "mutable",
                      "name": "oldSigner",
                      "nameLocation": "918:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 79,
                      "src": "910:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 66,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "910:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 69,
                  "initialValue": {
                    "id": 68,
                    "name": "signer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13,
                    "src": "930:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "910:26:3"
                },
                {
                  "expression": {
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 70,
                      "name": "signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "946:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 71,
                      "name": "_newSigner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "955:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "946:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "946:19:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 75,
                        "name": "oldSigner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "994:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 76,
                        "name": "_newSigner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "1005:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 74,
                      "name": "SignerUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "980:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "980:36:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78,
                  "nodeType": "EmitStatement",
                  "src": "975:41:3"
                }
              ]
            },
            "functionSelector": "a7ecd37e",
            "id": 80,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 54,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 53,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 331,
                  "src": "814:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "814:9:3"
              }
            ],
            "name": "updateSigner",
            "nameLocation": "774:12:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51,
                  "mutability": "mutable",
                  "name": "_newSigner",
                  "nameLocation": "795:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "787:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "787:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "786:20:3"
            },
            "returnParameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "824:0:3"
            },
            "scope": 284,
            "src": "765:258:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 100,
              "nodeType": "Block",
              "src": "1159:73:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 94,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82,
                            "src": "1203:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 95,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "1208:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 96,
                            "name": "_nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "1217:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 92,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1186:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 93,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1186:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1186:38:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 91,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1176:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1176:49:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 90,
                  "id": 99,
                  "nodeType": "Return",
                  "src": "1169:56:3"
                }
              ]
            },
            "functionSelector": "d2b0737b",
            "id": 101,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMessageHash",
            "nameLocation": "1038:14:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1070:3:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "1062:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1062:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1091:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "1083:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1083:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "_nonce",
                  "nameLocation": "1116:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "1108:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1108:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1052:76:3"
            },
            "returnParameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "1150:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1150:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1149:9:3"
            },
            "scope": 284,
            "src": "1029:203:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 116,
              "nodeType": "Block",
              "src": "1351:201:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
                            "id": 111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1445:34:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                              "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                            },
                            "value": "\u0019Ethereum Signed Message:\n32"
                          },
                          {
                            "id": 112,
                            "name": "_messageHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103,
                            "src": "1501:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                              "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 109,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1407:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1407:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1407:124:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 108,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1380:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1380:165:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 107,
                  "id": 115,
                  "nodeType": "Return",
                  "src": "1361:184:3"
                }
              ]
            },
            "functionSelector": "fa540801",
            "id": 117,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEthSignedMessageHash",
            "nameLocation": "1247:23:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 103,
                  "mutability": "mutable",
                  "name": "_messageHash",
                  "nameLocation": "1279:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 117,
                  "src": "1271:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1271:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1270:22:3"
            },
            "returnParameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 106,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 117,
                  "src": "1338:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1338:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1337:9:3"
            },
            "scope": 284,
            "src": "1238:314:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 196,
              "nodeType": "Block",
              "src": "1689:655:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1707:18:3",
                        "subExpression": {
                          "baseExpression": {
                            "id": 127,
                            "name": "usedNonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "1708:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                              "typeString": "mapping(uint256 => bool)"
                            }
                          },
                          "id": 129,
                          "indexExpression": {
                            "id": 128,
                            "name": "_nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 121,
                            "src": "1718:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1708:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973207369676e617475726520616c7265616479207573656421",
                        "id": 131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1727:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e670039a4a78af65134858063ed0d915fa0e6a1b2fe46b9255da471e1683ec76",
                          "typeString": "literal_string \"This signature already used!\""
                        },
                        "value": "This signature already used!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e670039a4a78af65134858063ed0d915fa0e6a1b2fe46b9255da471e1683ec76",
                          "typeString": "literal_string \"This signature already used!\""
                        }
                      ],
                      "id": 126,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1699:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1699:59:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "1699:59:3"
                },
                {
                  "assignments": [
                    135
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 135,
                      "mutability": "mutable",
                      "name": "messageHash",
                      "nameLocation": "1776:11:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 196,
                      "src": "1768:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 134,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1768:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 142,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 137,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1805:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1805:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 139,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "1817:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 140,
                        "name": "_nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "1826:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 136,
                      "name": "getMessageHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "1790:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (address,uint256,uint256) pure returns (bytes32)"
                      }
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1790:43:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1768:65:3"
                },
                {
                  "assignments": [
                    144
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 144,
                      "mutability": "mutable",
                      "name": "ethSignedMessageHash",
                      "nameLocation": "1851:20:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 196,
                      "src": "1843:28:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 143,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1843:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 148,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 146,
                        "name": "messageHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135,
                        "src": "1898:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 145,
                      "name": "getEthSignedMessageHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 117,
                      "src": "1874:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32) pure returns (bytes32)"
                      }
                    },
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1874:36:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1843:67:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 151,
                              "name": "ethSignedMessageHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 144,
                              "src": "1956:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 152,
                              "name": "_signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 123,
                              "src": "1978:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 150,
                            "name": "recoverSigner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 262,
                            "src": "1942:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (bytes32,bytes memory) pure returns (address)"
                            }
                          },
                          "id": 153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1942:47:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 154,
                          "name": "signer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "1993:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1942:57:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964207369676e6174757265",
                        "id": 156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2013:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7",
                          "typeString": "literal_string \"Invalid signature\""
                        },
                        "value": "Invalid signature"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7",
                          "typeString": "literal_string \"Invalid signature\""
                        }
                      ],
                      "id": 149,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1921:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1921:121:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 158,
                  "nodeType": "ExpressionStatement",
                  "src": "1921:121:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 166,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2105:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LabradoWallet_$284",
                                    "typeString": "contract LabradoWallet"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_LabradoWallet_$284",
                                    "typeString": "contract LabradoWallet"
                                  }
                                ],
                                "id": 165,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2097:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 164,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2097:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2097:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 161,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7,
                                  "src": "2080:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 160,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 467,
                                "src": "2073:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$467_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 162,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2073:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$467",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 163,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 424,
                            "src": "2073:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2073:38:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 169,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 119,
                          "src": "2114:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2073:48:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57616c6c657420646f6573206e6f74206861766520656e6f75676820746f6b656e",
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2135:35:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fade7b60bb62d53cc68ce75a3bfd91c2742e7a6b5b83d9157a641694b29392fc",
                          "typeString": "literal_string \"Wallet does not have enough token\""
                        },
                        "value": "Wallet does not have enough token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fade7b60bb62d53cc68ce75a3bfd91c2742e7a6b5b83d9157a641694b29392fc",
                          "typeString": "literal_string \"Wallet does not have enough token\""
                        }
                      ],
                      "id": 159,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2052:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2052:128:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 173,
                  "nodeType": "ExpressionStatement",
                  "src": "2052:128:3"
                },
                {
                  "expression": {
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 174,
                        "name": "usedNonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "2190:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 176,
                      "indexExpression": {
                        "id": 175,
                        "name": "_nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "2200:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2190:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2210:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2190:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "2190:24:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 184,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2247:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2247:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 186,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "2259:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 181,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "2231:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 180,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 467,
                          "src": "2224:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$467_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2224:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$467",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 434,
                      "src": "2224:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2224:43:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 188,
                  "nodeType": "ExpressionStatement",
                  "src": "2224:43:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 190,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2309:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2309:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 192,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "2321:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 193,
                        "name": "_nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "2330:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 189,
                      "name": "TokenWithdrewWithSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "2282:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2282:55:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 195,
                  "nodeType": "EmitStatement",
                  "src": "2277:60:3"
                }
              ]
            },
            "functionSelector": "458f2f69",
            "id": 197,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawTokenWithSignature",
            "nameLocation": "1567:26:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 119,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1611:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 197,
                  "src": "1603:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1603:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 121,
                  "mutability": "mutable",
                  "name": "_nonce",
                  "nameLocation": "1636:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 197,
                  "src": "1628:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1628:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 123,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "1665:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 197,
                  "src": "1652:23:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1652:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1593:88:3"
            },
            "returnParameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1689:0:3"
            },
            "scope": 284,
            "src": "1558:786:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 234,
              "nodeType": "Block",
              "src": "2447:240:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 213,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2510:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LabradoWallet_$284",
                                    "typeString": "contract LabradoWallet"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_LabradoWallet_$284",
                                    "typeString": "contract LabradoWallet"
                                  }
                                ],
                                "id": 212,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2502:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 211,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2502:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 214,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2502:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 208,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7,
                                  "src": "2485:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 207,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 467,
                                "src": "2478:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$467_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2478:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$467",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 424,
                            "src": "2478:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2478:38:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 216,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 201,
                          "src": "2519:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2478:48:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57616c6c657420646f6573206e6f74206861766520656e6f75676820746f6b656e",
                        "id": 218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2540:35:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fade7b60bb62d53cc68ce75a3bfd91c2742e7a6b5b83d9157a641694b29392fc",
                          "typeString": "literal_string \"Wallet does not have enough token\""
                        },
                        "value": "Wallet does not have enough token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fade7b60bb62d53cc68ce75a3bfd91c2742e7a6b5b83d9157a641694b29392fc",
                          "typeString": "literal_string \"Wallet does not have enough token\""
                        }
                      ],
                      "id": 206,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2457:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2457:128:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 220,
                  "nodeType": "ExpressionStatement",
                  "src": "2457:128:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 225,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 199,
                        "src": "2618:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 226,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 201,
                        "src": "2623:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 222,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "2602:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 221,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 467,
                          "src": "2595:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$467_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2595:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$467",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 434,
                      "src": "2595:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2595:36:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 228,
                  "nodeType": "ExpressionStatement",
                  "src": "2595:36:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 230,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 199,
                        "src": "2667:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 231,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 201,
                        "src": "2672:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 229,
                      "name": "TokenWithdrewByOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "2646:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2646:34:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 233,
                  "nodeType": "EmitStatement",
                  "src": "2641:39:3"
                }
              ]
            },
            "functionSelector": "b0b357f7",
            "id": 235,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 204,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 203,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 331,
                  "src": "2433:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "2433:9:3"
              }
            ],
            "name": "withdrawTokenByOwner",
            "nameLocation": "2359:20:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 199,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "2388:3:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 235,
                  "src": "2380:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 198,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2380:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 201,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2401:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 235,
                  "src": "2393:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 200,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2393:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2379:30:3"
            },
            "returnParameters": {
              "id": 205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2447:0:3"
            },
            "scope": 284,
            "src": "2350:337:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 261,
              "nodeType": "Block",
              "src": "2824:136:3",
              "statements": [
                {
                  "assignments": [
                    245,
                    247,
                    249
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 245,
                      "mutability": "mutable",
                      "name": "r",
                      "nameLocation": "2843:1:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 261,
                      "src": "2835:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 244,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2835:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 247,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "2854:1:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 261,
                      "src": "2846:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 246,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2846:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 249,
                      "mutability": "mutable",
                      "name": "v",
                      "nameLocation": "2863:1:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 261,
                      "src": "2857:7:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 248,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2857:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 253,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 251,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 239,
                        "src": "2883:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 250,
                      "name": "splitSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 283,
                      "src": "2868:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$_t_bytes32_$_t_uint8_$",
                        "typeString": "function (bytes memory) pure returns (bytes32,bytes32,uint8)"
                      }
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2868:26:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_uint8_$",
                      "typeString": "tuple(bytes32,bytes32,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2834:60:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 255,
                        "name": "_ethSignedMessageHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 237,
                        "src": "2922:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 256,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 249,
                        "src": "2945:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 257,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 245,
                        "src": "2948:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 258,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 247,
                        "src": "2951:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 254,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -6,
                      "src": "2912:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2912:41:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 243,
                  "id": 260,
                  "nodeType": "Return",
                  "src": "2905:48:3"
                }
              ]
            },
            "functionSelector": "97aba7f9",
            "id": 262,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recoverSigner",
            "nameLocation": "2702:13:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 240,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 237,
                  "mutability": "mutable",
                  "name": "_ethSignedMessageHash",
                  "nameLocation": "2733:21:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "2725:29:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 236,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2725:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 239,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "2777:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "2764:23:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 238,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2764:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2715:78:3"
            },
            "returnParameters": {
              "id": 243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 242,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "2815:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 241,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2815:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2814:9:3"
            },
            "scope": 284,
            "src": "2693:267:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 282,
              "nodeType": "Block",
              "src": "3134:366:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 274,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 264,
                            "src": "3152:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3152:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3635",
                          "id": 276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3166:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_65_by_1",
                            "typeString": "int_const 65"
                          },
                          "value": "65"
                        },
                        "src": "3152:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c6964207369676e6174757265206c656e677468",
                        "id": 278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3170:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87",
                          "typeString": "literal_string \"invalid signature length\""
                        },
                        "value": "invalid signature length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87",
                          "typeString": "literal_string \"invalid signature length\""
                        }
                      ],
                      "id": 273,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3144:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3144:53:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 280,
                  "nodeType": "ExpressionStatement",
                  "src": "3144:53:3"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "3217:277:3",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3286:24:3",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "sig",
                                  "nodeType": "YulIdentifier",
                                  "src": "3301:3:3"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3306:2:3",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3297:3:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3297:12:3"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "3291:5:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3291:19:3"
                        },
                        "variableNames": [
                          {
                            "name": "r",
                            "nodeType": "YulIdentifier",
                            "src": "3286:1:3"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3354:24:3",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "sig",
                                  "nodeType": "YulIdentifier",
                                  "src": "3369:3:3"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3374:2:3",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3365:3:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3365:12:3"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "3359:5:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3359:19:3"
                        },
                        "variableNames": [
                          {
                            "name": "s",
                            "nodeType": "YulIdentifier",
                            "src": "3354:1:3"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3451:33:3",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3461:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "sig",
                                      "nodeType": "YulIdentifier",
                                      "src": "3474:3:3"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3479:2:3",
                                      "type": "",
                                      "value": "96"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3470:3:3"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3470:12:3"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3464:5:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3464:19:3"
                            }
                          ],
                          "functionName": {
                            "name": "byte",
                            "nodeType": "YulIdentifier",
                            "src": "3456:4:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3456:28:3"
                        },
                        "variableNames": [
                          {
                            "name": "v",
                            "nodeType": "YulIdentifier",
                            "src": "3451:1:3"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 267,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3286:1:3",
                      "valueSize": 1
                    },
                    {
                      "declaration": 269,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3354:1:3",
                      "valueSize": 1
                    },
                    {
                      "declaration": 264,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3301:3:3",
                      "valueSize": 1
                    },
                    {
                      "declaration": 264,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3369:3:3",
                      "valueSize": 1
                    },
                    {
                      "declaration": 264,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3474:3:3",
                      "valueSize": 1
                    },
                    {
                      "declaration": 271,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3451:1:3",
                      "valueSize": 1
                    }
                  ],
                  "id": 281,
                  "nodeType": "InlineAssembly",
                  "src": "3208:286:3"
                }
              ]
            },
            "functionSelector": "a7bb5803",
            "id": 283,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "splitSignature",
            "nameLocation": "2975:14:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 264,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "3003:3:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 283,
                  "src": "2990:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 263,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2990:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2989:18:3"
            },
            "returnParameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 267,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "3074:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 283,
                  "src": "3066:9:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 266,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3066:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 269,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "3097:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 283,
                  "src": "3089:9:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 268,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3089:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 271,
                  "mutability": "mutable",
                  "name": "v",
                  "nameLocation": "3118:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 283,
                  "src": "3112:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 270,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3112:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3052:77:3"
            },
            "scope": 284,
            "src": "2966:534:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 285,
        "src": "200:3302:3",
        "usedErrors": []
      }
    ],
    "src": "64:3439:3"
  },
  "bytecode": "608060405234801561001057600080fd5b50604051610d18380380610d1883398101604081905261002f916100d8565b6100383361006c565b600380546001600160a01b039283166001600160a01b0319918216179091556001805493909216921691909117905561010b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100d357600080fd5b919050565b600080604083850312156100eb57600080fd5b6100f4836100bc565b9150610102602084016100bc565b90509250929050565b610bfe8061011a6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063a7ecd37e11610071578063a7ecd37e14610139578063b0b357f71461014c578063d2b0737b1461015f578063f2fde38b14610180578063fa54080114610193578063fc0c546a146101a657600080fd5b8063458f2f69146100ae578063715018a6146100c35780638da5cb5b146100cb57806397aba7f9146100f5578063a7bb580314610108575b600080fd5b6100c16100bc36600461098f565b6101b9565b005b6100c16103f2565b6000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6100d86101033660046109df565b610428565b61011b610116366004610a26565b6104a7565b60408051938452602084019290925260ff16908201526060016100ec565b6100c1610147366004610a7f565b61051b565b6100c161015a366004610aa1565b6105ed565b61017261016d366004610acb565b61075f565b6040519081526020016100ec565b6100c161018e366004610a7f565b6107ae565b6101726101a1366004610afe565b610849565b6001546100d8906001600160a01b031681565b60008281526002602052604090205460ff161561021d5760405162461bcd60e51b815260206004820152601c60248201527f54686973207369676e617475726520616c72656164792075736564210000000060448201526064015b60405180910390fd5b600061022a33858561075f565b9050600061023782610849565b6003549091506001600160a01b03166102508285610428565b6001600160a01b03161461029a5760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b6044820152606401610214565b6001546040516370a0823160e01b815230600482015286916001600160a01b0316906370a0823190602401602060405180830381865afa1580156102e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103069190610b17565b116103235760405162461bcd60e51b815260040161021490610b30565b60008481526002602052604090819020805460ff1916600190811790915554905163a9059cbb60e01b8152336004820152602481018790526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561038f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b39190610b71565b50604051858152849033907f866a99e8e2ed7bc605884213726ab8077ed5e2a4c252633a4157b9c99c68ee329060200160405180910390a35050505050565b6000546001600160a01b0316331461041c5760405162461bcd60e51b815260040161021490610b93565b610426600061089c565b565b600080600080610437856104a7565b6040805160008152602081018083528b905260ff8316918101919091526060810184905260808101839052929550909350915060019060a0016020604051602081039080840390855afa158015610492573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b600080600083516041146104fd5760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e67746800000000000000006044820152606401610214565b50505060208101516040820151606090920151909260009190911a90565b6000546001600160a01b031633146105455760405162461bcd60e51b815260040161021490610b93565b6001600160a01b03811661059b5760405162461bcd60e51b815260206004820152601d60248201527f4e6577206f776e657220697320746865207a65726f20616464726573730000006044820152606401610214565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f2d025324f0a785e8c12d0a0d91a9caa49df4ef20ff87e0df7213a1d4f3157beb90600090a35050565b6000546001600160a01b031633146106175760405162461bcd60e51b815260040161021490610b93565b6001546040516370a0823160e01b815230600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa15801561065f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106839190610b17565b116106a05760405162461bcd60e51b815260040161021490610b30565b60015460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af11580156106f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107179190610b71565b50816001600160a01b03167f47057a498f3bf85e43a2aee4b6f8b2eebd52d1664da34600d9748946ed7b7ca18260405161075391815260200190565b60405180910390a25050565b6040516bffffffffffffffffffffffff19606085901b16602082015260348101839052605481018290526000906074016040516020818303038152906040528051906020012090509392505050565b6000546001600160a01b031633146107d85760405162461bcd60e51b815260040161021490610b93565b6001600160a01b03811661083d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610214565b6108468161089c565b50565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261091357600080fd5b813567ffffffffffffffff8082111561092e5761092e6108ec565b604051601f8301601f19908116603f01168101908282118183101715610956576109566108ec565b8160405283815286602085880101111561096f57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156109a457600080fd5b8335925060208401359150604084013567ffffffffffffffff8111156109c957600080fd5b6109d586828701610902565b9150509250925092565b600080604083850312156109f257600080fd5b82359150602083013567ffffffffffffffff811115610a1057600080fd5b610a1c85828601610902565b9150509250929050565b600060208284031215610a3857600080fd5b813567ffffffffffffffff811115610a4f57600080fd5b610a5b84828501610902565b949350505050565b80356001600160a01b0381168114610a7a57600080fd5b919050565b600060208284031215610a9157600080fd5b610a9a82610a63565b9392505050565b60008060408385031215610ab457600080fd5b610abd83610a63565b946020939093013593505050565b600080600060608486031215610ae057600080fd5b610ae984610a63565b95602085013595506040909401359392505050565b600060208284031215610b1057600080fd5b5035919050565b600060208284031215610b2957600080fd5b5051919050565b60208082526021908201527f57616c6c657420646f6573206e6f74206861766520656e6f75676820746f6b656040820152603760f91b606082015260800190565b600060208284031215610b8357600080fd5b81518015158114610a9a57600080fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220cdc4e51a3a75af2e6b52097ae07f51e6dfaa77e0f24c43b617d41aea27e4db8964736f6c634300080c0033",
  "bytecodeSha1": "0344a8e526a4eff4d20ea7f02aadc0ba03ac026e",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "LabradoWallet",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "29": [
            2006,
            2028,
            true
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {
        "LabradoWallet.splitSignature": {
          "26": [
            3152,
            3168,
            true
          ]
        },
        "LabradoWallet.updateSigner": {
          "27": [
            842,
            866,
            true
          ]
        },
        "LabradoWallet.withdrawTokenByOwner": {
          "28": [
            2478,
            2526,
            true
          ]
        },
        "LabradoWallet.withdrawTokenWithSignature": {
          "23": [
            1707,
            1725,
            true
          ],
          "24": [
            1942,
            1999,
            true
          ],
          "25": [
            2073,
            2121,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "21": [
            2378,
            2395
          ],
          "22": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "0": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "8": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "18": [
            1998,
            2071
          ],
          "19": [
            2081,
            2109
          ]
        }
      },
      "1": {},
      "2": {
        "Context._msgSender": {
          "7": [
            712,
            729
          ]
        }
      },
      "3": {
        "LabradoWallet.getEthSignedMessageHash": {
          "20": [
            1361,
            1545
          ]
        },
        "LabradoWallet.getMessageHash": {
          "17": [
            1169,
            1225
          ]
        },
        "LabradoWallet.recoverSigner": {
          "9": [
            2905,
            2953
          ]
        },
        "LabradoWallet.splitSignature": {
          "10": [
            3144,
            3197
          ]
        },
        "LabradoWallet.updateSigner": {
          "11": [
            834,
            900
          ],
          "12": [
            946,
            965
          ],
          "13": [
            975,
            1016
          ]
        },
        "LabradoWallet.withdrawTokenByOwner": {
          "14": [
            2457,
            2585
          ],
          "15": [
            2595,
            2631
          ],
          "16": [
            2641,
            2680
          ]
        },
        "LabradoWallet.withdrawTokenWithSignature": {
          "1": [
            1699,
            1758
          ],
          "2": [
            1921,
            2042
          ],
          "3": [
            2052,
            2180
          ],
          "4": [
            2190,
            2214
          ],
          "5": [
            2224,
            2267
          ],
          "6": [
            2277,
            2337
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.6.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.6.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.6.0/Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a95760003560e01c8063a7ecd37e11610071578063a7ecd37e14610139578063b0b357f71461014c578063d2b0737b1461015f578063f2fde38b14610180578063fa54080114610193578063fc0c546a146101a657600080fd5b8063458f2f69146100ae578063715018a6146100c35780638da5cb5b146100cb57806397aba7f9146100f5578063a7bb580314610108575b600080fd5b6100c16100bc36600461098f565b6101b9565b005b6100c16103f2565b6000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6100d86101033660046109df565b610428565b61011b610116366004610a26565b6104a7565b60408051938452602084019290925260ff16908201526060016100ec565b6100c1610147366004610a7f565b61051b565b6100c161015a366004610aa1565b6105ed565b61017261016d366004610acb565b61075f565b6040519081526020016100ec565b6100c161018e366004610a7f565b6107ae565b6101726101a1366004610afe565b610849565b6001546100d8906001600160a01b031681565b60008281526002602052604090205460ff161561021d5760405162461bcd60e51b815260206004820152601c60248201527f54686973207369676e617475726520616c72656164792075736564210000000060448201526064015b60405180910390fd5b600061022a33858561075f565b9050600061023782610849565b6003549091506001600160a01b03166102508285610428565b6001600160a01b03161461029a5760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b6044820152606401610214565b6001546040516370a0823160e01b815230600482015286916001600160a01b0316906370a0823190602401602060405180830381865afa1580156102e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103069190610b17565b116103235760405162461bcd60e51b815260040161021490610b30565b60008481526002602052604090819020805460ff1916600190811790915554905163a9059cbb60e01b8152336004820152602481018790526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561038f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b39190610b71565b50604051858152849033907f866a99e8e2ed7bc605884213726ab8077ed5e2a4c252633a4157b9c99c68ee329060200160405180910390a35050505050565b6000546001600160a01b0316331461041c5760405162461bcd60e51b815260040161021490610b93565b610426600061089c565b565b600080600080610437856104a7565b6040805160008152602081018083528b905260ff8316918101919091526060810184905260808101839052929550909350915060019060a0016020604051602081039080840390855afa158015610492573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b600080600083516041146104fd5760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e67746800000000000000006044820152606401610214565b50505060208101516040820151606090920151909260009190911a90565b6000546001600160a01b031633146105455760405162461bcd60e51b815260040161021490610b93565b6001600160a01b03811661059b5760405162461bcd60e51b815260206004820152601d60248201527f4e6577206f776e657220697320746865207a65726f20616464726573730000006044820152606401610214565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f2d025324f0a785e8c12d0a0d91a9caa49df4ef20ff87e0df7213a1d4f3157beb90600090a35050565b6000546001600160a01b031633146106175760405162461bcd60e51b815260040161021490610b93565b6001546040516370a0823160e01b815230600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa15801561065f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106839190610b17565b116106a05760405162461bcd60e51b815260040161021490610b30565b60015460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af11580156106f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107179190610b71565b50816001600160a01b03167f47057a498f3bf85e43a2aee4b6f8b2eebd52d1664da34600d9748946ed7b7ca18260405161075391815260200190565b60405180910390a25050565b6040516bffffffffffffffffffffffff19606085901b16602082015260348101839052605481018290526000906074016040516020818303038152906040528051906020012090509392505050565b6000546001600160a01b031633146107d85760405162461bcd60e51b815260040161021490610b93565b6001600160a01b03811661083d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610214565b6108468161089c565b50565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261091357600080fd5b813567ffffffffffffffff8082111561092e5761092e6108ec565b604051601f8301601f19908116603f01168101908282118183101715610956576109566108ec565b8160405283815286602085880101111561096f57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156109a457600080fd5b8335925060208401359150604084013567ffffffffffffffff8111156109c957600080fd5b6109d586828701610902565b9150509250925092565b600080604083850312156109f257600080fd5b82359150602083013567ffffffffffffffff811115610a1057600080fd5b610a1c85828601610902565b9150509250929050565b600060208284031215610a3857600080fd5b813567ffffffffffffffff811115610a4f57600080fd5b610a5b84828501610902565b949350505050565b80356001600160a01b0381168114610a7a57600080fd5b919050565b600060208284031215610a9157600080fd5b610a9a82610a63565b9392505050565b60008060408385031215610ab457600080fd5b610abd83610a63565b946020939093013593505050565b600080600060608486031215610ae057600080fd5b610ae984610a63565b95602085013595506040909401359392505050565b600060208284031215610b1057600080fd5b5035919050565b600060208284031215610b2957600080fd5b5051919050565b60208082526021908201527f57616c6c657420646f6573206e6f74206861766520656e6f75676820746f6b656040820152603760f91b606082015260800190565b600060208284031215610b8357600080fd5b81518015158114610a9a57600080fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220cdc4e51a3a75af2e6b52097ae07f51e6dfaa77e0f24c43b617d41aea27e4db8964736f6c634300080c0033",
  "deployedSourceMap": "200:3302:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1558:786;;;;;;:::i;:::-;;:::i;:::-;;1668:101:0;;;:::i;1036:85::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;;-1:-1:-1;;;;;1494:32:4;;;1476:51;;1464:2;1449:18;1036:85:0;;;;;;;;2693:267:3;;;;;;:::i;:::-;;:::i;2966:534::-;;;;;;:::i;:::-;;:::i;:::-;;;;2454:25:4;;;2510:2;2495:18;;2488:34;;;;2570:4;2558:17;2538:18;;;2531:45;2442:2;2427:18;2966:534:3;2256:326:4;765:258:3;;;;;;:::i;:::-;;:::i;2350:337::-;;;;;;:::i;:::-;;:::i;1029:203::-;;;;;;:::i;:::-;;:::i;:::-;;;3688:25:4;;;3676:2;3661:18;1029:203:3;3542:177:4;1918:198:0;;;;;;:::i;:::-;;:::i;1238:314:3:-;;;;;;:::i;:::-;;:::i;240:20::-;;;;;-1:-1:-1;;;;;240:20:3;;;1558:786;1708:17;;;;:9;:17;;;;;;;;1707:18;1699:59;;;;-1:-1:-1;;;1699:59:3;;4111:2:4;1699:59:3;;;4093:21:4;4150:2;4130:18;;;4123:30;4189;4169:18;;;4162:58;4237:18;;1699:59:3;;;;;;;;;1768:19;1790:43;1805:10;1817:7;1826:6;1790:14;:43::i;:::-;1768:65;;1843:28;1874:36;1898:11;1874:23;:36::i;:::-;1993:6;;1843:67;;-1:-1:-1;;;;;;1993:6:3;1942:47;1843:67;1978:10;1942:13;:47::i;:::-;-1:-1:-1;;;;;1942:57:3;;1921:121;;;;-1:-1:-1;;;1921:121:3;;4468:2:4;1921:121:3;;;4450:21:4;4507:2;4487:18;;;4480:30;-1:-1:-1;;;4526:18:4;;;4519:47;4583:18;;1921:121:3;4266:341:4;1921:121:3;2080:5;;2073:38;;-1:-1:-1;;;2073:38:3;;2105:4;2073:38;;;1476:51:4;2114:7:3;;-1:-1:-1;;;;;2080:5:3;;2073:23;;1449:18:4;;2073:38:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;2052:128;;;;-1:-1:-1;;;2052:128:3;;;;;;;:::i;:::-;2190:17;;;;:9;:17;;;;;;;:24;;-1:-1:-1;;2190:24:3;2210:4;2190:24;;;;;;2231:5;2224:43;;-1:-1:-1;;;2224:43:3;;2247:10;2224:43;;;5377:51:4;5444:18;;;5437:34;;;-1:-1:-1;;;;;2231:5:3;;;;2224:22;;5350:18:4;;2224:43:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2282:55:3;;3688:25:4;;;2330:6:3;;2309:10;;2282:55;;3676:2:4;3661:18;2282:55:3;;;;;;;1689:655;;1558:786;;;:::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;2693:267:3:-;2815:7;2835:9;2846;2857:7;2868:26;2883:10;2868:14;:26::i;:::-;2912:41;;;;;;;;;;;;6534:25:4;;;6607:4;6595:17;;6575:18;;;6568:45;;;;6629:18;;;6622:34;;;6672:18;;;6665:34;;;2834:60:3;;-1:-1:-1;2834:60:3;;-1:-1:-1;2834:60:3;-1:-1:-1;2912:41:3;;6506:19:4;;2912:41:3;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2912:41:3;;-1:-1:-1;;2912:41:3;;;2693:267;-1:-1:-1;;;;;;;2693:267:3:o;2966:534::-;3066:9;3089;3112:7;3152:3;:10;3166:2;3152:16;3144:53;;;;-1:-1:-1;;;3144:53:3;;6912:2:4;3144:53:3;;;6894:21:4;6951:2;6931:18;;;6924:30;6990:26;6970:18;;;6963:54;7034:18;;3144:53:3;6710:348:4;3144:53:3;-1:-1:-1;;;3306:2:3;3297:12;;3291:19;3374:2;3365:12;;3359:19;3479:2;3470:12;;;3464:19;3291;;3461:1;3456:28;;;;;2966:534::o;765:258::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;842:24:3;::::1;834:66;;;::::0;-1:-1:-1;;;834:66:3;;7265:2:4;834:66:3::1;::::0;::::1;7247:21:4::0;7304:2;7284:18;;;7277:30;7343:31;7323:18;;;7316:59;7392:18;;834:66:3::1;7063:353:4::0;834:66:3::1;930:6;::::0;;-1:-1:-1;;;;;946:19:3;;::::1;-1:-1:-1::0;;;;;;946:19:3;::::1;::::0;::::1;::::0;;;980:36:::1;::::0;930:6;::::1;::::0;946:19;930:6;;980:36:::1;::::0;910:17:::1;::::0;980:36:::1;824:199;765:258:::0;:::o;2350:337::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;2485:5:3::1;::::0;2478:38:::1;::::0;-1:-1:-1;;;2478:38:3;;2510:4:::1;2478:38;::::0;::::1;1476:51:4::0;2519:7:3;;-1:-1:-1;;;;;2485:5:3::1;::::0;2478:23:::1;::::0;1449:18:4;;2478:38:3::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;2457:128;;;;-1:-1:-1::0;;;2457:128:3::1;;;;;;;:::i;:::-;2602:5;::::0;2595:36:::1;::::0;-1:-1:-1;;;2595:36:3;;-1:-1:-1;;;;;5395:32:4;;;2595:36:3::1;::::0;::::1;5377:51:4::0;5444:18;;;5437:34;;;2602:5:3;;::::1;::::0;2595:22:::1;::::0;5350:18:4;;2595:36:3::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2667:3;-1:-1:-1::0;;;;;2646:34:3::1;;2672:7;2646:34;;;;3688:25:4::0;;3676:2;3661:18;;3542:177;2646:34:3::1;;;;;;;;2350:337:::0;;:::o;1029:203::-;1186:38;;-1:-1:-1;;7626:2:4;7622:15;;;7618:53;1186:38:3;;;7606:66:4;7688:12;;;7681:28;;;7725:12;;;7718:28;;;1150:7:3;;7762:12:4;;1186:38:3;;;;;;;;;;;;1176:49;;;;;;1169:56;;1029:203;;;;;:::o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;7987:2:4;1998:73:0::1;::::0;::::1;7969:21:4::0;8026:2;8006:18;;;7999:30;8065:34;8045:18;;;8038:62;-1:-1:-1;;;8116:18:4;;;8109:36;8162:19;;1998:73:0::1;7785:402:4::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;1238:314:3:-;1407:124;;8434:66:4;1407:124:3;;;8422:79:4;8517:12;;;8510:28;;;1338:7:3;;8554:12:4;;1407:124:3;;;;;;;;;;;;1380:165;;;;;;1361:184;;1238:314;;;:::o;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:127:4:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:718;188:5;241:3;234:4;226:6;222:17;218:27;208:55;;259:1;256;249:12;208:55;295:6;282:20;321:18;358:2;354;351:10;348:36;;;364:18;;:::i;:::-;439:2;433:9;407:2;493:13;;-1:-1:-1;;489:22:4;;;513:2;485:31;481:40;469:53;;;537:18;;;557:22;;;534:46;531:72;;;583:18;;:::i;:::-;623:10;619:2;612:22;658:2;650:6;643:18;704:3;697:4;692:2;684:6;680:15;676:26;673:35;670:55;;;721:1;718;711:12;670:55;785:2;778:4;770:6;766:17;759:4;751:6;747:17;734:54;832:1;825:4;820:2;812:6;808:15;804:26;797:37;852:6;843:15;;;;;;146:718;;;;:::o;869:456::-;955:6;963;971;1024:2;1012:9;1003:7;999:23;995:32;992:52;;;1040:1;1037;1030:12;992:52;1076:9;1063:23;1053:33;;1133:2;1122:9;1118:18;1105:32;1095:42;;1188:2;1177:9;1173:18;1160:32;1215:18;1207:6;1204:30;1201:50;;;1247:1;1244;1237:12;1201:50;1270:49;1311:7;1302:6;1291:9;1287:22;1270:49;:::i;:::-;1260:59;;;869:456;;;;;:::o;1538:388::-;1615:6;1623;1676:2;1664:9;1655:7;1651:23;1647:32;1644:52;;;1692:1;1689;1682:12;1644:52;1728:9;1715:23;1705:33;;1789:2;1778:9;1774:18;1761:32;1816:18;1808:6;1805:30;1802:50;;;1848:1;1845;1838:12;1802:50;1871:49;1912:7;1903:6;1892:9;1888:22;1871:49;:::i;:::-;1861:59;;;1538:388;;;;;:::o;1931:320::-;1999:6;2052:2;2040:9;2031:7;2027:23;2023:32;2020:52;;;2068:1;2065;2058:12;2020:52;2108:9;2095:23;2141:18;2133:6;2130:30;2127:50;;;2173:1;2170;2163:12;2127:50;2196:49;2237:7;2228:6;2217:9;2213:22;2196:49;:::i;:::-;2186:59;1931:320;-1:-1:-1;;;;1931:320:4:o;2587:173::-;2655:20;;-1:-1:-1;;;;;2704:31:4;;2694:42;;2684:70;;2750:1;2747;2740:12;2684:70;2587:173;;;:::o;2765:186::-;2824:6;2877:2;2865:9;2856:7;2852:23;2848:32;2845:52;;;2893:1;2890;2883:12;2845:52;2916:29;2935:9;2916:29;:::i;:::-;2906:39;2765:186;-1:-1:-1;;;2765:186:4:o;2956:254::-;3024:6;3032;3085:2;3073:9;3064:7;3060:23;3056:32;3053:52;;;3101:1;3098;3091:12;3053:52;3124:29;3143:9;3124:29;:::i;:::-;3114:39;3200:2;3185:18;;;;3172:32;;-1:-1:-1;;;2956:254:4:o;3215:322::-;3292:6;3300;3308;3361:2;3349:9;3340:7;3336:23;3332:32;3329:52;;;3377:1;3374;3367:12;3329:52;3400:29;3419:9;3400:29;:::i;:::-;3390:39;3476:2;3461:18;;3448:32;;-1:-1:-1;3527:2:4;3512:18;;;3499:32;;3215:322;-1:-1:-1;;;3215:322:4:o;3724:180::-;3783:6;3836:2;3824:9;3815:7;3811:23;3807:32;3804:52;;;3852:1;3849;3842:12;3804:52;-1:-1:-1;3875:23:4;;3724:180;-1:-1:-1;3724:180:4:o;4612:184::-;4682:6;4735:2;4723:9;4714:7;4710:23;4706:32;4703:52;;;4751:1;4748;4741:12;4703:52;-1:-1:-1;4774:16:4;;4612:184;-1:-1:-1;4612:184:4:o;4801:397::-;5003:2;4985:21;;;5042:2;5022:18;;;5015:30;5081:34;5076:2;5061:18;;5054:62;-1:-1:-1;;;5147:2:4;5132:18;;5125:31;5188:3;5173:19;;4801:397::o;5482:277::-;5549:6;5602:2;5590:9;5581:7;5577:23;5573:32;5570:52;;;5618:1;5615;5608:12;5570:52;5650:9;5644:16;5703:5;5696:13;5689:21;5682:5;5679:32;5669:60;;5725:1;5722;5715:12;5946:356;6148:2;6130:21;;;6167:18;;;6160:30;6226:34;6221:2;6206:18;;6199:62;6293:2;6278:18;;5946:356::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    200,
    3502
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA7ECD37E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA7ECD37E EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0xB0B357F7 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0xD2B0737B EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0xFA540801 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x1A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x458F2F69 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0x97ABA7F9 EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0xA7BB5803 EQ PUSH2 0x108 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0x98F JUMP JUMPDEST PUSH2 0x1B9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC1 PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x428 JUMP JUMPDEST PUSH2 0x11B PUSH2 0x116 CALLDATASIZE PUSH1 0x4 PUSH2 0xA26 JUMP JUMPDEST PUSH2 0x4A7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0xEC JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x147 CALLDATASIZE PUSH1 0x4 PUSH2 0xA7F JUMP JUMPDEST PUSH2 0x51B JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST PUSH2 0x172 PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0xACB JUMP JUMPDEST PUSH2 0x75F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEC JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x18E CALLDATASIZE PUSH1 0x4 PUSH2 0xA7F JUMP JUMPDEST PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x172 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0xAFE JUMP JUMPDEST PUSH2 0x849 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xD8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x21D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973207369676E617475726520616C726561647920757365642100000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x22A CALLER DUP6 DUP6 PUSH2 0x75F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x237 DUP3 PUSH2 0x849 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x250 DUP3 DUP6 PUSH2 0x428 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x29A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x214 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP7 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x306 SWAP2 SWAP1 PUSH2 0xB17 JUMP JUMPDEST GT PUSH2 0x323 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x214 SWAP1 PUSH2 0xB30 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x38F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0xB71 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE DUP5 SWAP1 CALLER SWAP1 PUSH32 0x866A99E8E2ED7BC605884213726AB8077ED5E2A4C252633A4157B9C99C68EE32 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x41C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x214 SWAP1 PUSH2 0xB93 JUMP JUMPDEST PUSH2 0x426 PUSH1 0x0 PUSH2 0x89C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x437 DUP6 PUSH2 0x4A7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 DUP4 MSTORE DUP12 SWAP1 MSTORE PUSH1 0xFF DUP4 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE SWAP3 SWAP6 POP SWAP1 SWAP4 POP SWAP2 POP PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x492 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 EQ PUSH2 0x4FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964207369676E6174757265206C656E6774680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x214 JUMP JUMPDEST POP POP POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD SWAP1 SWAP3 PUSH1 0x0 SWAP2 SWAP1 SWAP2 BYTE SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x545 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x214 SWAP1 PUSH2 0xB93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x59B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6577206F776E657220697320746865207A65726F2061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x214 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x2D025324F0A785E8C12D0A0D91A9CAA49DF4EF20FF87E0DF7213A1D4F3157BEB SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x214 SWAP1 PUSH2 0xB93 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x65F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x683 SWAP2 SWAP1 PUSH2 0xB17 JUMP JUMPDEST GT PUSH2 0x6A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x214 SWAP1 PUSH2 0xB30 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x717 SWAP2 SWAP1 PUSH2 0xB71 JUMP JUMPDEST POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x47057A498F3BF85E43A2AEE4B6F8B2EEBD52D1664DA34600D9748946ED7B7CA1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x753 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP6 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x54 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x74 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x214 SWAP1 PUSH2 0xB93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x83D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x214 JUMP JUMPDEST PUSH2 0x846 DUP2 PUSH2 0x89C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x5C ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x913 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x92E JUMPI PUSH2 0x92E PUSH2 0x8EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x956 JUMPI PUSH2 0x956 PUSH2 0x8EC JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x96F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9D5 DUP7 DUP3 DUP8 ADD PUSH2 0x902 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA1C DUP6 DUP3 DUP7 ADD PUSH2 0x902 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA5B DUP5 DUP3 DUP6 ADD PUSH2 0x902 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA9A DUP3 PUSH2 0xA63 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xABD DUP4 PUSH2 0xA63 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xAE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAE9 DUP5 PUSH2 0xA63 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x57616C6C657420646F6573206E6F74206861766520656E6F75676820746F6B65 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0xF9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xA9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0xC4 0xE5 BYTE GASPRICE PUSH22 0xAF2E6B52097AE07F51E6DFAA77E0F24C43B617D41AEA 0x27 0xE4 0xDB DUP10 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        200,
        3502
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "6": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "REVERT",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "17": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "POP",
      "path": "3"
    },
    "18": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "21": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "LT",
      "path": "3"
    },
    "22": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA9"
    },
    "25": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "29": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "SHR",
      "path": "3"
    },
    "32": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "DUP1",
      "path": "3"
    },
    "33": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA7ECD37E"
    },
    "38": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "GT",
      "path": "3"
    },
    "39": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "43": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "DUP1",
      "path": "3"
    },
    "44": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA7ECD37E"
    },
    "49": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "EQ",
      "path": "3"
    },
    "50": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x139"
    },
    "53": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "54": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "DUP1",
      "path": "3"
    },
    "55": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xB0B357F7"
    },
    "60": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "EQ",
      "path": "3"
    },
    "61": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14C"
    },
    "64": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "65": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "DUP1",
      "path": "3"
    },
    "66": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xD2B0737B"
    },
    "71": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "EQ",
      "path": "3"
    },
    "72": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15F"
    },
    "75": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "76": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "DUP1",
      "path": "3"
    },
    "77": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF2FDE38B"
    },
    "82": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "EQ",
      "path": "3"
    },
    "83": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x180"
    },
    "86": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "87": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "DUP1",
      "path": "3"
    },
    "88": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFA540801"
    },
    "93": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "EQ",
      "path": "3"
    },
    "94": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x193"
    },
    "97": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "98": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "DUP1",
      "path": "3"
    },
    "99": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFC0C546A"
    },
    "104": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "EQ",
      "path": "3"
    },
    "105": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A6"
    },
    "108": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "109": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "DUP1",
      "path": "3"
    },
    "112": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "REVERT",
      "path": "3"
    },
    "113": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "114": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "DUP1",
      "path": "3"
    },
    "115": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x458F2F69"
    },
    "120": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "EQ",
      "path": "3"
    },
    "121": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAE"
    },
    "124": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "125": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "DUP1",
      "path": "3"
    },
    "126": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x715018A6"
    },
    "131": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "EQ",
      "path": "3"
    },
    "132": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC3"
    },
    "135": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "136": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "DUP1",
      "path": "3"
    },
    "137": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8DA5CB5B"
    },
    "142": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "EQ",
      "path": "3"
    },
    "143": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCB"
    },
    "146": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "147": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "DUP1",
      "path": "3"
    },
    "148": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x97ABA7F9"
    },
    "153": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "EQ",
      "path": "3"
    },
    "154": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF5"
    },
    "157": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "158": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "DUP1",
      "path": "3"
    },
    "159": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA7BB5803"
    },
    "164": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "EQ",
      "path": "3"
    },
    "165": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x108"
    },
    "168": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "169": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "170": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "172": {
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "DUP1",
      "path": "3"
    },
    "173": {
      "first_revert": true,
      "fn": null,
      "offset": [
        200,
        3502
      ],
      "op": "REVERT",
      "path": "3"
    },
    "174": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1558,
        2344
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "175": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1558,
        2344
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC1"
    },
    "178": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1558,
        2344
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBC"
    },
    "181": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1558,
        2344
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "182": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1558,
        2344
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "184": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1558,
        2344
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x98F"
    },
    "187": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "jump": "i",
      "offset": [
        1558,
        2344
      ],
      "op": "JUMP",
      "path": "3"
    },
    "188": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1558,
        2344
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "189": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1558,
        2344
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B9"
    },
    "192": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "jump": "i",
      "offset": [
        1558,
        2344
      ],
      "op": "JUMP",
      "path": "3"
    },
    "193": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1558,
        2344
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "194": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1558,
        2344
      ],
      "op": "STOP",
      "path": "3"
    },
    "195": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "196": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1"
    },
    "199": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F2"
    },
    "202": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "203": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "204": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "206": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "211": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "213": {
      "op": "SHL"
    },
    "214": {
      "op": "SUB"
    },
    "215": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "216": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "217": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "219": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "224": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "226": {
      "op": "SHL"
    },
    "227": {
      "op": "SUB"
    },
    "228": {
      "op": "SWAP1"
    },
    "229": {
      "op": "SWAP2"
    },
    "230": {
      "op": "AND"
    },
    "231": {
      "op": "DUP2"
    },
    "232": {
      "op": "MSTORE"
    },
    "233": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "235": {
      "op": "ADD"
    },
    "236": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "237": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "239": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "240": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "241": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "242": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "SUB",
      "path": "0"
    },
    "243": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "244": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "RETURN",
      "path": "0"
    },
    "245": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2693,
        2960
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "246": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2693,
        2960
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD8"
    },
    "249": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2693,
        2960
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x103"
    },
    "252": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2693,
        2960
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "253": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2693,
        2960
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "255": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2693,
        2960
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9DF"
    },
    "258": {
      "fn": "LabradoWallet.recoverSigner",
      "jump": "i",
      "offset": [
        2693,
        2960
      ],
      "op": "JUMP",
      "path": "3"
    },
    "259": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2693,
        2960
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "260": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2693,
        2960
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x428"
    },
    "263": {
      "fn": "LabradoWallet.recoverSigner",
      "jump": "i",
      "offset": [
        2693,
        2960
      ],
      "op": "JUMP",
      "path": "3"
    },
    "264": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        2966,
        3500
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "265": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        2966,
        3500
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11B"
    },
    "268": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        2966,
        3500
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x116"
    },
    "271": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        2966,
        3500
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "272": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        2966,
        3500
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "274": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        2966,
        3500
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA26"
    },
    "277": {
      "fn": "LabradoWallet.splitSignature",
      "jump": "i",
      "offset": [
        2966,
        3500
      ],
      "op": "JUMP",
      "path": "3"
    },
    "278": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        2966,
        3500
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "279": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        2966,
        3500
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4A7"
    },
    "282": {
      "fn": "LabradoWallet.splitSignature",
      "jump": "i",
      "offset": [
        2966,
        3500
      ],
      "op": "JUMP",
      "path": "3"
    },
    "283": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        2966,
        3500
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "284": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        2966,
        3500
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "286": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        2966,
        3500
      ],
      "op": "DUP1",
      "path": "3"
    },
    "287": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        2966,
        3500
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "288": {
      "op": "SWAP4"
    },
    "289": {
      "op": "DUP5"
    },
    "290": {
      "op": "MSTORE"
    },
    "291": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "293": {
      "op": "DUP5"
    },
    "294": {
      "op": "ADD"
    },
    "295": {
      "op": "SWAP3"
    },
    "296": {
      "op": "SWAP1"
    },
    "297": {
      "op": "SWAP3"
    },
    "298": {
      "op": "MSTORE"
    },
    "299": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "301": {
      "op": "AND"
    },
    "302": {
      "op": "SWAP1"
    },
    "303": {
      "op": "DUP3"
    },
    "304": {
      "op": "ADD"
    },
    "305": {
      "op": "MSTORE"
    },
    "306": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "308": {
      "op": "ADD"
    },
    "309": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        2966,
        3500
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEC"
    },
    "312": {
      "op": "JUMP"
    },
    "313": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        765,
        1023
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "314": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        765,
        1023
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC1"
    },
    "317": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        765,
        1023
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x147"
    },
    "320": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        765,
        1023
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "321": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        765,
        1023
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "323": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        765,
        1023
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA7F"
    },
    "326": {
      "fn": "LabradoWallet.updateSigner",
      "jump": "i",
      "offset": [
        765,
        1023
      ],
      "op": "JUMP",
      "path": "3"
    },
    "327": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        765,
        1023
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "328": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        765,
        1023
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x51B"
    },
    "331": {
      "fn": "LabradoWallet.updateSigner",
      "jump": "i",
      "offset": [
        765,
        1023
      ],
      "op": "JUMP",
      "path": "3"
    },
    "332": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2350,
        2687
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "333": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2350,
        2687
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC1"
    },
    "336": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2350,
        2687
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15A"
    },
    "339": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2350,
        2687
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "340": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2350,
        2687
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "342": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2350,
        2687
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAA1"
    },
    "345": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "jump": "i",
      "offset": [
        2350,
        2687
      ],
      "op": "JUMP",
      "path": "3"
    },
    "346": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2350,
        2687
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "347": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2350,
        2687
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5ED"
    },
    "350": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "jump": "i",
      "offset": [
        2350,
        2687
      ],
      "op": "JUMP",
      "path": "3"
    },
    "351": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1029,
        1232
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "352": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1029,
        1232
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x172"
    },
    "355": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1029,
        1232
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16D"
    },
    "358": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1029,
        1232
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "359": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1029,
        1232
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "361": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1029,
        1232
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xACB"
    },
    "364": {
      "fn": "LabradoWallet.getMessageHash",
      "jump": "i",
      "offset": [
        1029,
        1232
      ],
      "op": "JUMP",
      "path": "3"
    },
    "365": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1029,
        1232
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "366": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1029,
        1232
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x75F"
    },
    "369": {
      "fn": "LabradoWallet.getMessageHash",
      "jump": "i",
      "offset": [
        1029,
        1232
      ],
      "op": "JUMP",
      "path": "3"
    },
    "370": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1029,
        1232
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "371": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1029,
        1232
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "373": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1029,
        1232
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "374": {
      "op": "SWAP1"
    },
    "375": {
      "op": "DUP2"
    },
    "376": {
      "op": "MSTORE"
    },
    "377": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "379": {
      "op": "ADD"
    },
    "380": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1029,
        1232
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEC"
    },
    "383": {
      "op": "JUMP"
    },
    "384": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "385": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1"
    },
    "388": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18E"
    },
    "391": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "392": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "394": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA7F"
    },
    "397": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "398": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "399": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7AE"
    },
    "402": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "403": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        1238,
        1552
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "404": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        1238,
        1552
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x172"
    },
    "407": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        1238,
        1552
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A1"
    },
    "410": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        1238,
        1552
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "411": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        1238,
        1552
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "413": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        1238,
        1552
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAFE"
    },
    "416": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "jump": "i",
      "offset": [
        1238,
        1552
      ],
      "op": "JUMP",
      "path": "3"
    },
    "417": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        1238,
        1552
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "418": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        1238,
        1552
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x849"
    },
    "421": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "jump": "i",
      "offset": [
        1238,
        1552
      ],
      "op": "JUMP",
      "path": "3"
    },
    "422": {
      "offset": [
        240,
        260
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "423": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        240,
        260
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "425": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        240,
        260
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "426": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        240,
        260
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD8"
    },
    "429": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        240,
        260
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "434": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "436": {
      "op": "SHL"
    },
    "437": {
      "op": "SUB"
    },
    "438": {
      "offset": [
        240,
        260
      ],
      "op": "AND",
      "path": "3"
    },
    "439": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        240,
        260
      ],
      "op": "DUP2",
      "path": "3"
    },
    "440": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        240,
        260
      ],
      "op": "JUMP",
      "path": "3"
    },
    "441": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1558,
        2344
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "442": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1708,
        1725
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 1,
      "value": "0x0"
    },
    "444": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1708,
        1725
      ],
      "op": "DUP3",
      "path": "3"
    },
    "445": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1708,
        1725
      ],
      "op": "DUP2",
      "path": "3"
    },
    "446": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1708,
        1725
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "447": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1708,
        1717
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "449": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1708,
        1725
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "451": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1708,
        1725
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "452": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1708,
        1725
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "454": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1708,
        1725
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "455": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1708,
        1725
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "456": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1708,
        1725
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "457": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1708,
        1725
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "459": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1708,
        1725
      ],
      "op": "AND",
      "path": "3"
    },
    "460": {
      "branch": 23,
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1707,
        1725
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "461": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1699,
        1758
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21D"
    },
    "464": {
      "branch": 23,
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1699,
        1758
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "465": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1699,
        1758
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "467": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1699,
        1758
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "468": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "472": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "474": {
      "op": "SHL"
    },
    "475": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1699,
        1758
      ],
      "op": "DUP2",
      "path": "3"
    },
    "476": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1699,
        1758
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "477": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "479": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1699,
        1758
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "481": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1699,
        1758
      ],
      "op": "DUP3",
      "path": "3"
    },
    "482": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1699,
        1758
      ],
      "op": "ADD",
      "path": "3"
    },
    "483": {
      "op": "MSTORE"
    },
    "484": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "486": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "488": {
      "op": "DUP3"
    },
    "489": {
      "op": "ADD"
    },
    "490": {
      "op": "MSTORE"
    },
    "491": {
      "op": "PUSH32",
      "value": "0x54686973207369676E617475726520616C726561647920757365642100000000"
    },
    "524": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "526": {
      "op": "DUP3"
    },
    "527": {
      "op": "ADD"
    },
    "528": {
      "op": "MSTORE"
    },
    "529": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "531": {
      "op": "ADD"
    },
    "532": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1699,
        1758
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "533": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1699,
        1758
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "535": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1699,
        1758
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "536": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1699,
        1758
      ],
      "op": "DUP1",
      "path": "3"
    },
    "537": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1699,
        1758
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "538": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1699,
        1758
      ],
      "op": "SUB",
      "path": "3"
    },
    "539": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1699,
        1758
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "540": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1699,
        1758
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "3"
    },
    "541": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1699,
        1758
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "542": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1768,
        1787
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "544": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1790,
        1833
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22A"
    },
    "547": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1805,
        1815
      ],
      "op": "CALLER",
      "path": "3"
    },
    "548": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1817,
        1824
      ],
      "op": "DUP6",
      "path": "3"
    },
    "549": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1826,
        1832
      ],
      "op": "DUP6",
      "path": "3"
    },
    "550": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1790,
        1804
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x75F"
    },
    "553": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "jump": "i",
      "offset": [
        1790,
        1833
      ],
      "op": "JUMP",
      "path": "3"
    },
    "554": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1790,
        1833
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "555": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1768,
        1833
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "556": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1768,
        1833
      ],
      "op": "POP",
      "path": "3"
    },
    "557": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1843,
        1871
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "559": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1874,
        1910
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x237"
    },
    "562": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1898,
        1909
      ],
      "op": "DUP3",
      "path": "3"
    },
    "563": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1874,
        1897
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x849"
    },
    "566": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "jump": "i",
      "offset": [
        1874,
        1910
      ],
      "op": "JUMP",
      "path": "3"
    },
    "567": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1874,
        1910
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "568": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1993,
        1999
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 2,
      "value": "0x3"
    },
    "570": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1993,
        1999
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "571": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1843,
        1910
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "572": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1843,
        1910
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "573": {
      "op": "POP"
    },
    "574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "578": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "580": {
      "op": "SHL"
    },
    "581": {
      "op": "SUB"
    },
    "582": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1993,
        1999
      ],
      "op": "AND",
      "path": "3"
    },
    "583": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1942,
        1989
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x250"
    },
    "586": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1843,
        1910
      ],
      "op": "DUP3",
      "path": "3"
    },
    "587": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1978,
        1988
      ],
      "op": "DUP6",
      "path": "3"
    },
    "588": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1942,
        1955
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x428"
    },
    "591": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "jump": "i",
      "offset": [
        1942,
        1989
      ],
      "op": "JUMP",
      "path": "3"
    },
    "592": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1942,
        1989
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "597": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "599": {
      "op": "SHL"
    },
    "600": {
      "op": "SUB"
    },
    "601": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1942,
        1999
      ],
      "op": "AND",
      "path": "3"
    },
    "602": {
      "branch": 24,
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1942,
        1999
      ],
      "op": "EQ",
      "path": "3"
    },
    "603": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1921,
        2042
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29A"
    },
    "606": {
      "branch": 24,
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1921,
        2042
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "607": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1921,
        2042
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "609": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1921,
        2042
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "610": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "614": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "616": {
      "op": "SHL"
    },
    "617": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1921,
        2042
      ],
      "op": "DUP2",
      "path": "3"
    },
    "618": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1921,
        2042
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "619": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "621": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1921,
        2042
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "623": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1921,
        2042
      ],
      "op": "DUP3",
      "path": "3"
    },
    "624": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1921,
        2042
      ],
      "op": "ADD",
      "path": "3"
    },
    "625": {
      "op": "MSTORE"
    },
    "626": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "628": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "630": {
      "op": "DUP3"
    },
    "631": {
      "op": "ADD"
    },
    "632": {
      "op": "MSTORE"
    },
    "633": {
      "op": "PUSH17",
      "value": "0x496E76616C6964207369676E6174757265"
    },
    "651": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "653": {
      "op": "SHL"
    },
    "654": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "656": {
      "op": "DUP3"
    },
    "657": {
      "op": "ADD"
    },
    "658": {
      "op": "MSTORE"
    },
    "659": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "661": {
      "op": "ADD"
    },
    "662": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1921,
        2042
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x214"
    },
    "665": {
      "op": "JUMP"
    },
    "666": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1921,
        2042
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "667": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2080,
        2085
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 3,
      "value": "0x1"
    },
    "669": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2080,
        2085
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "670": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "672": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "673": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "678": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "680": {
      "op": "SHL"
    },
    "681": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "DUP2",
      "path": "3"
    },
    "682": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "683": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2105,
        2109
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "684": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "686": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "DUP3",
      "path": "3"
    },
    "687": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "ADD",
      "path": "3"
    },
    "688": {
      "op": "MSTORE"
    },
    "689": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2114,
        2121
      ],
      "op": "DUP7",
      "path": "3"
    },
    "690": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2114,
        2121
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "695": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "697": {
      "op": "SHL"
    },
    "698": {
      "op": "SUB"
    },
    "699": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2080,
        2085
      ],
      "op": "AND",
      "path": "3"
    },
    "700": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2080,
        2085
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "701": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2096
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "706": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2096
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "707": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "709": {
      "op": "ADD"
    },
    "710": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "712": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "714": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "715": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "DUP1",
      "path": "3"
    },
    "716": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "DUP4",
      "path": "3"
    },
    "717": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "SUB",
      "path": "3"
    },
    "718": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "DUP2",
      "path": "3"
    },
    "719": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "DUP7",
      "path": "3"
    },
    "720": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "GAS",
      "path": "3"
    },
    "721": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "722": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "723": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "DUP1",
      "path": "3"
    },
    "724": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "725": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2E2"
    },
    "728": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "729": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "730": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "732": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "DUP1",
      "path": "3"
    },
    "733": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "734": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "735": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "737": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "REVERT",
      "path": "3"
    },
    "738": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "739": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "POP",
      "path": "3"
    },
    "740": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "POP",
      "path": "3"
    },
    "741": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "POP",
      "path": "3"
    },
    "742": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "POP",
      "path": "3"
    },
    "743": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "745": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "746": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "747": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "749": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "NOT",
      "path": "3"
    },
    "750": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "752": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "DUP3",
      "path": "3"
    },
    "753": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "ADD",
      "path": "3"
    },
    "754": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "AND",
      "path": "3"
    },
    "755": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "DUP3",
      "path": "3"
    },
    "756": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "ADD",
      "path": "3"
    },
    "757": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "DUP1",
      "path": "3"
    },
    "758": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "760": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "761": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "POP",
      "path": "3"
    },
    "762": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "DUP2",
      "path": "3"
    },
    "763": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "ADD",
      "path": "3"
    },
    "764": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "765": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x306"
    },
    "768": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "769": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "770": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB17"
    },
    "773": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "jump": "i",
      "offset": [
        2073,
        2111
      ],
      "op": "JUMP",
      "path": "3"
    },
    "774": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2111
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "775": {
      "branch": 25,
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2073,
        2121
      ],
      "op": "GT",
      "path": "3"
    },
    "776": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2052,
        2180
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x323"
    },
    "779": {
      "branch": 25,
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2052,
        2180
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "780": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2052,
        2180
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "782": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2052,
        2180
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "783": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "787": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "789": {
      "op": "SHL"
    },
    "790": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2052,
        2180
      ],
      "op": "DUP2",
      "path": "3"
    },
    "791": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2052,
        2180
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "792": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2052,
        2180
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "794": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2052,
        2180
      ],
      "op": "ADD",
      "path": "3"
    },
    "795": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2052,
        2180
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x214"
    },
    "798": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2052,
        2180
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "799": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2052,
        2180
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB30"
    },
    "802": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "jump": "i",
      "offset": [
        2052,
        2180
      ],
      "op": "JUMP",
      "path": "3"
    },
    "803": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2052,
        2180
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "804": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2190,
        2207
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 4,
      "value": "0x0"
    },
    "806": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2190,
        2207
      ],
      "op": "DUP5",
      "path": "3"
    },
    "807": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2190,
        2207
      ],
      "op": "DUP2",
      "path": "3"
    },
    "808": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2190,
        2207
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "809": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2190,
        2199
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "811": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2190,
        2207
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "813": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2190,
        2207
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "814": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2190,
        2207
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "816": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2190,
        2207
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "817": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2190,
        2207
      ],
      "op": "DUP2",
      "path": "3"
    },
    "818": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2190,
        2207
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "819": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2190,
        2207
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "820": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2190,
        2214
      ],
      "op": "DUP1",
      "path": "3"
    },
    "821": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2190,
        2214
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "822": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "824": {
      "op": "NOT"
    },
    "825": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2190,
        2214
      ],
      "op": "AND",
      "path": "3"
    },
    "826": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2210,
        2214
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "828": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2190,
        2214
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "829": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2190,
        2214
      ],
      "op": "DUP2",
      "path": "3"
    },
    "830": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2190,
        2214
      ],
      "op": "OR",
      "path": "3"
    },
    "831": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2190,
        2214
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "832": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2190,
        2214
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "833": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2190,
        2214
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "834": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2231,
        2236
      ],
      "op": "SLOAD",
      "path": "3",
      "statement": 5
    },
    "835": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "836": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "837": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "842": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "844": {
      "op": "SHL"
    },
    "845": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "DUP2",
      "path": "3"
    },
    "846": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "847": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2247,
        2257
      ],
      "op": "CALLER",
      "path": "3"
    },
    "848": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "850": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "DUP3",
      "path": "3"
    },
    "851": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "ADD",
      "path": "3"
    },
    "852": {
      "op": "MSTORE"
    },
    "853": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "855": {
      "op": "DUP2"
    },
    "856": {
      "op": "ADD"
    },
    "857": {
      "op": "DUP8"
    },
    "858": {
      "op": "SWAP1"
    },
    "859": {
      "op": "MSTORE"
    },
    "860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "864": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "866": {
      "op": "SHL"
    },
    "867": {
      "op": "SUB"
    },
    "868": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2231,
        2236
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "869": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2231,
        2236
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "870": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2231,
        2236
      ],
      "op": "AND",
      "path": "3"
    },
    "871": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2231,
        2236
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "872": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2246
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9059CBB"
    },
    "877": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2246
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "878": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "880": {
      "op": "ADD"
    },
    "881": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "883": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "885": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "886": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "DUP1",
      "path": "3"
    },
    "887": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "DUP4",
      "path": "3"
    },
    "888": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "SUB",
      "path": "3"
    },
    "889": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "DUP2",
      "path": "3"
    },
    "890": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "892": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "DUP8",
      "path": "3"
    },
    "893": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "GAS",
      "path": "3"
    },
    "894": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "CALL",
      "path": "3"
    },
    "895": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "896": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "DUP1",
      "path": "3"
    },
    "897": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "898": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x38F"
    },
    "901": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "902": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "903": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "905": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "DUP1",
      "path": "3"
    },
    "906": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "907": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "908": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "910": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "REVERT",
      "path": "3"
    },
    "911": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "912": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "POP",
      "path": "3"
    },
    "913": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "POP",
      "path": "3"
    },
    "914": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "POP",
      "path": "3"
    },
    "915": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "POP",
      "path": "3"
    },
    "916": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "918": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "919": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "920": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "922": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "NOT",
      "path": "3"
    },
    "923": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "925": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "DUP3",
      "path": "3"
    },
    "926": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "ADD",
      "path": "3"
    },
    "927": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "AND",
      "path": "3"
    },
    "928": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "DUP3",
      "path": "3"
    },
    "929": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "ADD",
      "path": "3"
    },
    "930": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "DUP1",
      "path": "3"
    },
    "931": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "933": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "934": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "POP",
      "path": "3"
    },
    "935": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "DUP2",
      "path": "3"
    },
    "936": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "ADD",
      "path": "3"
    },
    "937": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "938": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B3"
    },
    "941": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "942": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "943": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB71"
    },
    "946": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "jump": "i",
      "offset": [
        2224,
        2267
      ],
      "op": "JUMP",
      "path": "3"
    },
    "947": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2224,
        2267
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "948": {
      "op": "POP"
    },
    "949": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2282,
        2337
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 6,
      "value": "0x40"
    },
    "951": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2282,
        2337
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "952": {
      "op": "DUP6"
    },
    "953": {
      "op": "DUP2"
    },
    "954": {
      "op": "MSTORE"
    },
    "955": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2330,
        2336
      ],
      "op": "DUP5",
      "path": "3"
    },
    "956": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2330,
        2336
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "957": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2309,
        2319
      ],
      "op": "CALLER",
      "path": "3"
    },
    "958": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2309,
        2319
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "959": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2282,
        2337
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x866A99E8E2ED7BC605884213726AB8077ED5E2A4C252633A4157B9C99C68EE32"
    },
    "992": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2282,
        2337
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "993": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "995": {
      "op": "ADD"
    },
    "996": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2282,
        2337
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "998": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2282,
        2337
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "999": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2282,
        2337
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1000": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2282,
        2337
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1001": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2282,
        2337
      ],
      "op": "SUB",
      "path": "3"
    },
    "1002": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2282,
        2337
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1003": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        2282,
        2337
      ],
      "op": "LOG3",
      "path": "3"
    },
    "1004": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1689,
        2344
      ],
      "op": "POP",
      "path": "3"
    },
    "1005": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1689,
        2344
      ],
      "op": "POP",
      "path": "3"
    },
    "1006": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1558,
        2344
      ],
      "op": "POP",
      "path": "3"
    },
    "1007": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1558,
        2344
      ],
      "op": "POP",
      "path": "3"
    },
    "1008": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "offset": [
        1558,
        2344
      ],
      "op": "POP",
      "path": "3"
    },
    "1009": {
      "fn": "LabradoWallet.withdrawTokenWithSignature",
      "jump": "o",
      "offset": [
        1558,
        2344
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1010": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1011": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1013": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1018": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1020": {
      "op": "SHL"
    },
    "1021": {
      "op": "SUB"
    },
    "1022": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1023": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 7
    },
    "1024": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1025": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41C"
    },
    "1028": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1029": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1031": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1032": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1038": {
      "op": "SHL"
    },
    "1039": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1040": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1041": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1043": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1044": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x214"
    },
    "1047": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1048": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB93"
    },
    "1051": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1052": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1053": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 8,
      "value": "0x426"
    },
    "1056": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1058": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x89C"
    },
    "1061": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1062": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1063": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1064": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2693,
        2960
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1065": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2815,
        2822
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1067": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2835,
        2844
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1068": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2846,
        2855
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1070": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2857,
        2864
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1071": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2868,
        2894
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x437"
    },
    "1074": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2883,
        2893
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1075": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2868,
        2882
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4A7"
    },
    "1078": {
      "fn": "LabradoWallet.recoverSigner",
      "jump": "i",
      "offset": [
        2868,
        2894
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1079": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2868,
        2894
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1080": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 9,
      "value": "0x40"
    },
    "1082": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1083": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1084": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1086": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1087": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1088": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1090": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1091": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "ADD",
      "path": "3"
    },
    "1092": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1093": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1094": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1095": {
      "op": "DUP12"
    },
    "1096": {
      "op": "SWAP1"
    },
    "1097": {
      "op": "MSTORE"
    },
    "1098": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1100": {
      "op": "DUP4"
    },
    "1101": {
      "op": "AND"
    },
    "1102": {
      "op": "SWAP2"
    },
    "1103": {
      "op": "DUP2"
    },
    "1104": {
      "op": "ADD"
    },
    "1105": {
      "op": "SWAP2"
    },
    "1106": {
      "op": "SWAP1"
    },
    "1107": {
      "op": "SWAP2"
    },
    "1108": {
      "op": "MSTORE"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1111": {
      "op": "DUP2"
    },
    "1112": {
      "op": "ADD"
    },
    "1113": {
      "op": "DUP5"
    },
    "1114": {
      "op": "SWAP1"
    },
    "1115": {
      "op": "MSTORE"
    },
    "1116": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1118": {
      "op": "DUP2"
    },
    "1119": {
      "op": "ADD"
    },
    "1120": {
      "op": "DUP4"
    },
    "1121": {
      "op": "SWAP1"
    },
    "1122": {
      "op": "MSTORE"
    },
    "1123": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2834,
        2894
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1124": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2834,
        2894
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "1125": {
      "op": "POP"
    },
    "1126": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2834,
        2894
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1127": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2834,
        2894
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1128": {
      "op": "POP"
    },
    "1129": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2834,
        2894
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1130": {
      "op": "POP"
    },
    "1131": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1133": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1134": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1136": {
      "op": "ADD"
    },
    "1137": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1139": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1141": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1142": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1144": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1145": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "SUB",
      "path": "3"
    },
    "1146": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1147": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1148": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1149": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "SUB",
      "path": "3"
    },
    "1150": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1151": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1152": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "GAS",
      "path": "3"
    },
    "1153": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "1154": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1155": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1156": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1157": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x492"
    },
    "1160": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1161": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1162": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1164": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1165": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "1166": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1167": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1169": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1170": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1171": {
      "op": "POP"
    },
    "1172": {
      "op": "POP"
    },
    "1173": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1175": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1178": {
      "op": "NOT"
    },
    "1179": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "ADD",
      "path": "3"
    },
    "1180": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1181": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2912,
        2953
      ],
      "op": "SWAP8",
      "path": "3"
    },
    "1182": {
      "fn": "LabradoWallet.recoverSigner",
      "offset": [
        2693,
        2960
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "1183": {
      "op": "POP"
    },
    "1184": {
      "op": "POP"
    },
    "1185": {
      "op": "POP"
    },
    "1186": {
      "op": "POP"
    },
    "1187": {
      "op": "POP"
    },
    "1188": {
      "op": "POP"
    },
    "1189": {
      "op": "POP"
    },
    "1190": {
      "fn": "LabradoWallet.recoverSigner",
      "jump": "o",
      "offset": [
        2693,
        2960
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1191": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        2966,
        3500
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1192": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        3066,
        3075
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1194": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        3089,
        3098
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1195": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        3112,
        3119
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1197": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        3152,
        3155
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 10
    },
    "1198": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        3152,
        3162
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1199": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        3166,
        3168
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x41"
    },
    "1201": {
      "branch": 26,
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        3152,
        3168
      ],
      "op": "EQ",
      "path": "3"
    },
    "1202": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        3144,
        3197
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4FD"
    },
    "1205": {
      "branch": 26,
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        3144,
        3197
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1206": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        3144,
        3197
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1208": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        3144,
        3197
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1209": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1215": {
      "op": "SHL"
    },
    "1216": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        3144,
        3197
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1217": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        3144,
        3197
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1220": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        3144,
        3197
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1222": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        3144,
        3197
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1223": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        3144,
        3197
      ],
      "op": "ADD",
      "path": "3"
    },
    "1224": {
      "op": "MSTORE"
    },
    "1225": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "1227": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1229": {
      "op": "DUP3"
    },
    "1230": {
      "op": "ADD"
    },
    "1231": {
      "op": "MSTORE"
    },
    "1232": {
      "op": "PUSH32",
      "value": "0x696E76616C6964207369676E6174757265206C656E6774680000000000000000"
    },
    "1265": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1267": {
      "op": "DUP3"
    },
    "1268": {
      "op": "ADD"
    },
    "1269": {
      "op": "MSTORE"
    },
    "1270": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1272": {
      "op": "ADD"
    },
    "1273": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        3144,
        3197
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x214"
    },
    "1276": {
      "op": "JUMP"
    },
    "1277": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        3144,
        3197
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1278": {
      "op": "POP"
    },
    "1279": {
      "op": "POP"
    },
    "1280": {
      "op": "POP"
    },
    "1281": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        3306,
        3308
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1283": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        3297,
        3309
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1284": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        3297,
        3309
      ],
      "op": "ADD",
      "path": "3"
    },
    "1285": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        3291,
        3310
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1286": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        3374,
        3376
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1288": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        3365,
        3377
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1289": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        3365,
        3377
      ],
      "op": "ADD",
      "path": "3"
    },
    "1290": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        3359,
        3378
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1291": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        3479,
        3481
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1293": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        3470,
        3482
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1294": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        3470,
        3482
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1295": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        3470,
        3482
      ],
      "op": "ADD",
      "path": "3"
    },
    "1296": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        3464,
        3483
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1297": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        3291,
        3310
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1298": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        3291,
        3310
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1299": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        3461,
        3462
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1301": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        3456,
        3484
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1302": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        3456,
        3484
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1303": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        3456,
        3484
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1304": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        3456,
        3484
      ],
      "op": "BYTE",
      "path": "3"
    },
    "1305": {
      "fn": "LabradoWallet.splitSignature",
      "offset": [
        3456,
        3484
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1306": {
      "fn": "LabradoWallet.splitSignature",
      "jump": "o",
      "offset": [
        2966,
        3500
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1307": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        765,
        1023
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1308": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1310": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1317": {
      "op": "SHL"
    },
    "1318": {
      "op": "SUB"
    },
    "1319": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1320": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1321": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1322": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x545"
    },
    "1325": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1326": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1328": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1329": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1333": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1335": {
      "op": "SHL"
    },
    "1336": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1337": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1338": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1340": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1341": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x214"
    },
    "1344": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1345": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB93"
    },
    "1348": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1349": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1354": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1356": {
      "op": "SHL"
    },
    "1357": {
      "op": "SUB"
    },
    "1358": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        842,
        866
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 11
    },
    "1359": {
      "branch": 27,
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        842,
        866
      ],
      "op": "AND",
      "path": "3"
    },
    "1360": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        834,
        900
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x59B"
    },
    "1363": {
      "branch": 27,
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        834,
        900
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1364": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        834,
        900
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1366": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        834,
        900
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1367": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1371": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1373": {
      "op": "SHL"
    },
    "1374": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        834,
        900
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1375": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        834,
        900
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1376": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1378": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        834,
        900
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1380": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        834,
        900
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1381": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        834,
        900
      ],
      "op": "ADD",
      "path": "3"
    },
    "1382": {
      "op": "MSTORE"
    },
    "1383": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "1385": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1387": {
      "op": "DUP3"
    },
    "1388": {
      "op": "ADD"
    },
    "1389": {
      "op": "MSTORE"
    },
    "1390": {
      "op": "PUSH32",
      "value": "0x4E6577206F776E657220697320746865207A65726F2061646472657373000000"
    },
    "1423": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1425": {
      "op": "DUP3"
    },
    "1426": {
      "op": "ADD"
    },
    "1427": {
      "op": "MSTORE"
    },
    "1428": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1430": {
      "op": "ADD"
    },
    "1431": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        834,
        900
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x214"
    },
    "1434": {
      "op": "JUMP"
    },
    "1435": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        834,
        900
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1436": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        930,
        936
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "1438": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        930,
        936
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1439": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        930,
        936
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1446": {
      "op": "SHL"
    },
    "1447": {
      "op": "SUB"
    },
    "1448": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        946,
        965
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 12
    },
    "1449": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        946,
        965
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1450": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        946,
        965
      ],
      "op": "AND",
      "path": "3"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1455": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1457": {
      "op": "SHL"
    },
    "1458": {
      "op": "SUB"
    },
    "1459": {
      "op": "NOT"
    },
    "1460": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        946,
        965
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1461": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        946,
        965
      ],
      "op": "AND",
      "path": "3"
    },
    "1462": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        946,
        965
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1463": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        946,
        965
      ],
      "op": "OR",
      "path": "3"
    },
    "1464": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        946,
        965
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1465": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        946,
        965
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1466": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        946,
        965
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1467": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        980,
        1016
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 13,
      "value": "0x40"
    },
    "1469": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        980,
        1016
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1470": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        930,
        936
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1471": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        930,
        936
      ],
      "op": "AND",
      "path": "3"
    },
    "1472": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        930,
        936
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1473": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        946,
        965
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1474": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        930,
        936
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1475": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        930,
        936
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1476": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        980,
        1016
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x2D025324F0A785E8C12D0A0D91A9CAA49DF4EF20FF87E0DF7213A1D4F3157BEB"
    },
    "1509": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        980,
        1016
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1510": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        910,
        927
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1512": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        910,
        927
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1513": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        980,
        1016
      ],
      "op": "LOG3",
      "path": "3"
    },
    "1514": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        824,
        1023
      ],
      "op": "POP",
      "path": "3"
    },
    "1515": {
      "fn": "LabradoWallet.updateSigner",
      "offset": [
        765,
        1023
      ],
      "op": "POP",
      "path": "3"
    },
    "1516": {
      "fn": "LabradoWallet.updateSigner",
      "jump": "o",
      "offset": [
        765,
        1023
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1517": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2350,
        2687
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1518": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1520": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1525": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1527": {
      "op": "SHL"
    },
    "1528": {
      "op": "SUB"
    },
    "1529": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1530": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1531": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1532": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x617"
    },
    "1535": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1536": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1538": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1539": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1543": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1545": {
      "op": "SHL"
    },
    "1546": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1547": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1548": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1550": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1551": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x214"
    },
    "1554": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1555": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB93"
    },
    "1558": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1559": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1560": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2485,
        2490
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 14,
      "value": "0x1"
    },
    "1562": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2485,
        2490
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1563": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1565": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1566": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1571": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1573": {
      "op": "SHL"
    },
    "1574": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1575": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1576": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2510,
        2514
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "1577": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1579": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1580": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "ADD",
      "path": "3"
    },
    "1581": {
      "op": "MSTORE"
    },
    "1582": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2519,
        2526
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1583": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2519,
        2526
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1588": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1590": {
      "op": "SHL"
    },
    "1591": {
      "op": "SUB"
    },
    "1592": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2485,
        2490
      ],
      "op": "AND",
      "path": "3"
    },
    "1593": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2485,
        2490
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1594": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2501
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "1599": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2501
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1600": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1602": {
      "op": "ADD"
    },
    "1603": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1605": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1607": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1608": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1609": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1610": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "SUB",
      "path": "3"
    },
    "1611": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1612": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1613": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "GAS",
      "path": "3"
    },
    "1614": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "1615": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1616": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1617": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1618": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x65F"
    },
    "1621": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1622": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1623": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1625": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1626": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "1627": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1628": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1630": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1631": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1632": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "POP",
      "path": "3"
    },
    "1633": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "POP",
      "path": "3"
    },
    "1634": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "POP",
      "path": "3"
    },
    "1635": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "POP",
      "path": "3"
    },
    "1636": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1638": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1639": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1640": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1642": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "NOT",
      "path": "3"
    },
    "1643": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1645": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1646": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "ADD",
      "path": "3"
    },
    "1647": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "AND",
      "path": "3"
    },
    "1648": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1649": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "ADD",
      "path": "3"
    },
    "1650": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1651": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1653": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1654": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "POP",
      "path": "3"
    },
    "1655": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1656": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "ADD",
      "path": "3"
    },
    "1657": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1658": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x683"
    },
    "1661": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1662": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1663": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB17"
    },
    "1666": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "jump": "i",
      "offset": [
        2478,
        2516
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1667": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2516
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1668": {
      "branch": 28,
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2478,
        2526
      ],
      "op": "GT",
      "path": "3"
    },
    "1669": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2457,
        2585
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6A0"
    },
    "1672": {
      "branch": 28,
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2457,
        2585
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1673": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2457,
        2585
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1675": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2457,
        2585
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1676": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1680": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1682": {
      "op": "SHL"
    },
    "1683": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2457,
        2585
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1684": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2457,
        2585
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1685": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2457,
        2585
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1687": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2457,
        2585
      ],
      "op": "ADD",
      "path": "3"
    },
    "1688": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2457,
        2585
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x214"
    },
    "1691": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2457,
        2585
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1692": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2457,
        2585
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB30"
    },
    "1695": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "jump": "i",
      "offset": [
        2457,
        2585
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1696": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2457,
        2585
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1697": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2602,
        2607
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 15,
      "value": "0x1"
    },
    "1699": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2602,
        2607
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1700": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1702": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1703": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1708": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1710": {
      "op": "SHL"
    },
    "1711": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1712": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1717": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1719": {
      "op": "SHL"
    },
    "1720": {
      "op": "SUB"
    },
    "1721": {
      "op": "DUP5"
    },
    "1722": {
      "op": "DUP2"
    },
    "1723": {
      "op": "AND"
    },
    "1724": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1726": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1727": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "ADD",
      "path": "3"
    },
    "1728": {
      "op": "MSTORE"
    },
    "1729": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1731": {
      "op": "DUP3"
    },
    "1732": {
      "op": "ADD"
    },
    "1733": {
      "op": "DUP5"
    },
    "1734": {
      "op": "SWAP1"
    },
    "1735": {
      "op": "MSTORE"
    },
    "1736": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2602,
        2607
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1737": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2602,
        2607
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1738": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2602,
        2607
      ],
      "op": "AND",
      "path": "3"
    },
    "1739": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2602,
        2607
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1740": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2617
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9059CBB"
    },
    "1745": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2617
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1748": {
      "op": "ADD"
    },
    "1749": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1751": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1753": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1754": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1755": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1756": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "SUB",
      "path": "3"
    },
    "1757": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1758": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1760": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1761": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "GAS",
      "path": "3"
    },
    "1762": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "CALL",
      "path": "3"
    },
    "1763": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1764": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1765": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1766": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6F3"
    },
    "1769": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1770": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1771": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1773": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1774": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "1775": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1776": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1778": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1779": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1780": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "POP",
      "path": "3"
    },
    "1781": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "POP",
      "path": "3"
    },
    "1782": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "POP",
      "path": "3"
    },
    "1783": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "POP",
      "path": "3"
    },
    "1784": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1786": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1787": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1788": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1790": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "NOT",
      "path": "3"
    },
    "1791": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1793": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1794": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "ADD",
      "path": "3"
    },
    "1795": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "AND",
      "path": "3"
    },
    "1796": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1797": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "ADD",
      "path": "3"
    },
    "1798": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1799": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1801": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1802": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "POP",
      "path": "3"
    },
    "1803": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1804": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "ADD",
      "path": "3"
    },
    "1805": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1806": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x717"
    },
    "1809": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1810": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1811": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB71"
    },
    "1814": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "jump": "i",
      "offset": [
        2595,
        2631
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1815": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1816": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2595,
        2631
      ],
      "op": "POP",
      "path": "3"
    },
    "1817": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2667,
        2670
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 16
    },
    "1818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1822": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1824": {
      "op": "SHL"
    },
    "1825": {
      "op": "SUB"
    },
    "1826": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2646,
        2680
      ],
      "op": "AND",
      "path": "3"
    },
    "1827": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2646,
        2680
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x47057A498F3BF85E43A2AEE4B6F8B2EEBD52D1664DA34600D9748946ED7B7CA1"
    },
    "1860": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2672,
        2679
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1861": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2646,
        2680
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1863": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2646,
        2680
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1864": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2646,
        2680
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x753"
    },
    "1867": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2646,
        2680
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1868": {
      "op": "DUP2"
    },
    "1869": {
      "op": "MSTORE"
    },
    "1870": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1872": {
      "op": "ADD"
    },
    "1873": {
      "op": "SWAP1"
    },
    "1874": {
      "op": "JUMP"
    },
    "1875": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2646,
        2680
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1876": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2646,
        2680
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1878": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2646,
        2680
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1879": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2646,
        2680
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1880": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2646,
        2680
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1881": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2646,
        2680
      ],
      "op": "SUB",
      "path": "3"
    },
    "1882": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2646,
        2680
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1883": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2646,
        2680
      ],
      "op": "LOG2",
      "path": "3"
    },
    "1884": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2350,
        2687
      ],
      "op": "POP",
      "path": "3"
    },
    "1885": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "offset": [
        2350,
        2687
      ],
      "op": "POP",
      "path": "3"
    },
    "1886": {
      "fn": "LabradoWallet.withdrawTokenByOwner",
      "jump": "o",
      "offset": [
        2350,
        2687
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1887": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1029,
        1232
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1888": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1186,
        1224
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 17,
      "value": "0x40"
    },
    "1890": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1186,
        1224
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1891": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1904": {
      "op": "NOT"
    },
    "1905": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1907": {
      "op": "DUP6"
    },
    "1908": {
      "op": "SWAP1"
    },
    "1909": {
      "op": "SHL"
    },
    "1910": {
      "op": "AND"
    },
    "1911": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1186,
        1224
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1913": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1186,
        1224
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1914": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1186,
        1224
      ],
      "op": "ADD",
      "path": "3"
    },
    "1915": {
      "op": "MSTORE"
    },
    "1916": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "1918": {
      "op": "DUP2"
    },
    "1919": {
      "op": "ADD"
    },
    "1920": {
      "op": "DUP4"
    },
    "1921": {
      "op": "SWAP1"
    },
    "1922": {
      "op": "MSTORE"
    },
    "1923": {
      "op": "PUSH1",
      "value": "0x54"
    },
    "1925": {
      "op": "DUP2"
    },
    "1926": {
      "op": "ADD"
    },
    "1927": {
      "op": "DUP3"
    },
    "1928": {
      "op": "SWAP1"
    },
    "1929": {
      "op": "MSTORE"
    },
    "1930": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1150,
        1157
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1932": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1150,
        1157
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1933": {
      "op": "PUSH1",
      "value": "0x74"
    },
    "1935": {
      "op": "ADD"
    },
    "1936": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1186,
        1224
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1938": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1186,
        1224
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1939": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1186,
        1224
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1941": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1186,
        1224
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1942": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1186,
        1224
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1943": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1186,
        1224
      ],
      "op": "SUB",
      "path": "3"
    },
    "1944": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1186,
        1224
      ],
      "op": "SUB",
      "path": "3"
    },
    "1945": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1186,
        1224
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1946": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1186,
        1224
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1947": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1186,
        1224
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1948": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1186,
        1224
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1950": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1186,
        1224
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1951": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1176,
        1225
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1952": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1176,
        1225
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1953": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1176,
        1225
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1954": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1176,
        1225
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1956": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1176,
        1225
      ],
      "op": "ADD",
      "path": "3"
    },
    "1957": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1176,
        1225
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1958": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1169,
        1225
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1959": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1169,
        1225
      ],
      "op": "POP",
      "path": "3"
    },
    "1960": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1029,
        1232
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1961": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1029,
        1232
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1962": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1029,
        1232
      ],
      "op": "POP",
      "path": "3"
    },
    "1963": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1029,
        1232
      ],
      "op": "POP",
      "path": "3"
    },
    "1964": {
      "fn": "LabradoWallet.getMessageHash",
      "offset": [
        1029,
        1232
      ],
      "op": "POP",
      "path": "3"
    },
    "1965": {
      "fn": "LabradoWallet.getMessageHash",
      "jump": "o",
      "offset": [
        1029,
        1232
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1966": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1967": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1969": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1974": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1976": {
      "op": "SHL"
    },
    "1977": {
      "op": "SUB"
    },
    "1978": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1979": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1980": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1981": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7D8"
    },
    "1984": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1985": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1987": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1988": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1992": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1994": {
      "op": "SHL"
    },
    "1995": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1996": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1997": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1999": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2000": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x214"
    },
    "2003": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2004": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB93"
    },
    "2007": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2008": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2013": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2015": {
      "op": "SHL"
    },
    "2016": {
      "op": "SUB"
    },
    "2017": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 18
    },
    "2018": {
      "branch": 29,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "2019": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x83D"
    },
    "2022": {
      "branch": 29,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2023": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2025": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2026": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2030": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2032": {
      "op": "SHL"
    },
    "2033": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2034": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2035": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2037": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2039": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2040": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "2041": {
      "op": "MSTORE"
    },
    "2042": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2044": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2046": {
      "op": "DUP3"
    },
    "2047": {
      "op": "ADD"
    },
    "2048": {
      "op": "MSTORE"
    },
    "2049": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "2082": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2084": {
      "op": "DUP3"
    },
    "2085": {
      "op": "ADD"
    },
    "2086": {
      "op": "MSTORE"
    },
    "2087": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "2094": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2096": {
      "op": "SHL"
    },
    "2097": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2099": {
      "op": "DUP3"
    },
    "2100": {
      "op": "ADD"
    },
    "2101": {
      "op": "MSTORE"
    },
    "2102": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2104": {
      "op": "ADD"
    },
    "2105": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x214"
    },
    "2108": {
      "op": "JUMP"
    },
    "2109": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2110": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 19,
      "value": "0x846"
    },
    "2113": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2114": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x89C"
    },
    "2117": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2118": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2119": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "0"
    },
    "2120": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2121": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        1238,
        1552
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2122": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        1407,
        1531
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 20,
      "value": "0x40"
    },
    "2124": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        1407,
        1531
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2125": {
      "op": "PUSH32",
      "value": "0x19457468657265756D205369676E6564204D6573736167653A0A333200000000"
    },
    "2158": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        1407,
        1531
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2160": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        1407,
        1531
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2161": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        1407,
        1531
      ],
      "op": "ADD",
      "path": "3"
    },
    "2162": {
      "op": "MSTORE"
    },
    "2163": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "2165": {
      "op": "DUP2"
    },
    "2166": {
      "op": "ADD"
    },
    "2167": {
      "op": "DUP3"
    },
    "2168": {
      "op": "SWAP1"
    },
    "2169": {
      "op": "MSTORE"
    },
    "2170": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        1338,
        1345
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2172": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        1338,
        1345
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2173": {
      "op": "PUSH1",
      "value": "0x5C"
    },
    "2175": {
      "op": "ADD"
    },
    "2176": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        1407,
        1531
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2178": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        1407,
        1531
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2179": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        1407,
        1531
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2181": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        1407,
        1531
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2182": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        1407,
        1531
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2183": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        1407,
        1531
      ],
      "op": "SUB",
      "path": "3"
    },
    "2184": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        1407,
        1531
      ],
      "op": "SUB",
      "path": "3"
    },
    "2185": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        1407,
        1531
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2186": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        1407,
        1531
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2187": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        1407,
        1531
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2188": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        1407,
        1531
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2190": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        1407,
        1531
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2191": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        1380,
        1545
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2192": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        1380,
        1545
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2193": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        1380,
        1545
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2194": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        1380,
        1545
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2196": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        1380,
        1545
      ],
      "op": "ADD",
      "path": "3"
    },
    "2197": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        1380,
        1545
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2198": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        1361,
        1545
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2199": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        1361,
        1545
      ],
      "op": "POP",
      "path": "3"
    },
    "2200": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        1238,
        1552
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2201": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        1238,
        1552
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2202": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "offset": [
        1238,
        1552
      ],
      "op": "POP",
      "path": "3"
    },
    "2203": {
      "fn": "LabradoWallet.getEthSignedMessageHash",
      "jump": "o",
      "offset": [
        1238,
        1552
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2204": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2205": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2207": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2208": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2213": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2215": {
      "op": "SHL"
    },
    "2216": {
      "op": "SUB"
    },
    "2217": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 21
    },
    "2218": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2219": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "2220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2224": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2226": {
      "op": "SHL"
    },
    "2227": {
      "op": "SUB"
    },
    "2228": {
      "op": "NOT"
    },
    "2229": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2230": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "2231": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2232": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "2233": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2234": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2235": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 22,
      "value": "0x40"
    },
    "2237": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2238": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2239": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2240": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2241": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "2242": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2243": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2244": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2245": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2278": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2279": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2280": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2281": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "2282": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "2283": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2284": {
      "op": "JUMPDEST"
    },
    "2285": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2290": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2292": {
      "op": "SHL"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2295": {
      "op": "MSTORE"
    },
    "2296": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "2298": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2300": {
      "op": "MSTORE"
    },
    "2301": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2303": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2305": {
      "op": "REVERT"
    },
    "2306": {
      "op": "JUMPDEST"
    },
    "2307": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2309": {
      "op": "DUP3"
    },
    "2310": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2312": {
      "op": "DUP4"
    },
    "2313": {
      "op": "ADD"
    },
    "2314": {
      "op": "SLT"
    },
    "2315": {
      "op": "PUSH2",
      "value": "0x913"
    },
    "2318": {
      "op": "JUMPI"
    },
    "2319": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2321": {
      "op": "DUP1"
    },
    "2322": {
      "op": "REVERT"
    },
    "2323": {
      "op": "JUMPDEST"
    },
    "2324": {
      "op": "DUP2"
    },
    "2325": {
      "op": "CALLDATALOAD"
    },
    "2326": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2335": {
      "op": "DUP1"
    },
    "2336": {
      "op": "DUP3"
    },
    "2337": {
      "op": "GT"
    },
    "2338": {
      "op": "ISZERO"
    },
    "2339": {
      "op": "PUSH2",
      "value": "0x92E"
    },
    "2342": {
      "op": "JUMPI"
    },
    "2343": {
      "op": "PUSH2",
      "value": "0x92E"
    },
    "2346": {
      "op": "PUSH2",
      "value": "0x8EC"
    },
    "2349": {
      "jump": "i",
      "op": "JUMP"
    },
    "2350": {
      "op": "JUMPDEST"
    },
    "2351": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2353": {
      "op": "MLOAD"
    },
    "2354": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2356": {
      "op": "DUP4"
    },
    "2357": {
      "op": "ADD"
    },
    "2358": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2360": {
      "op": "NOT"
    },
    "2361": {
      "op": "SWAP1"
    },
    "2362": {
      "op": "DUP2"
    },
    "2363": {
      "op": "AND"
    },
    "2364": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "2366": {
      "op": "ADD"
    },
    "2367": {
      "op": "AND"
    },
    "2368": {
      "op": "DUP2"
    },
    "2369": {
      "op": "ADD"
    },
    "2370": {
      "op": "SWAP1"
    },
    "2371": {
      "op": "DUP3"
    },
    "2372": {
      "op": "DUP3"
    },
    "2373": {
      "op": "GT"
    },
    "2374": {
      "op": "DUP2"
    },
    "2375": {
      "op": "DUP4"
    },
    "2376": {
      "op": "LT"
    },
    "2377": {
      "op": "OR"
    },
    "2378": {
      "op": "ISZERO"
    },
    "2379": {
      "op": "PUSH2",
      "value": "0x956"
    },
    "2382": {
      "op": "JUMPI"
    },
    "2383": {
      "op": "PUSH2",
      "value": "0x956"
    },
    "2386": {
      "op": "PUSH2",
      "value": "0x8EC"
    },
    "2389": {
      "jump": "i",
      "op": "JUMP"
    },
    "2390": {
      "op": "JUMPDEST"
    },
    "2391": {
      "op": "DUP2"
    },
    "2392": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2394": {
      "op": "MSTORE"
    },
    "2395": {
      "op": "DUP4"
    },
    "2396": {
      "op": "DUP2"
    },
    "2397": {
      "op": "MSTORE"
    },
    "2398": {
      "op": "DUP7"
    },
    "2399": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2401": {
      "op": "DUP6"
    },
    "2402": {
      "op": "DUP9"
    },
    "2403": {
      "op": "ADD"
    },
    "2404": {
      "op": "ADD"
    },
    "2405": {
      "op": "GT"
    },
    "2406": {
      "op": "ISZERO"
    },
    "2407": {
      "op": "PUSH2",
      "value": "0x96F"
    },
    "2410": {
      "op": "JUMPI"
    },
    "2411": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2413": {
      "op": "DUP1"
    },
    "2414": {
      "op": "REVERT"
    },
    "2415": {
      "op": "JUMPDEST"
    },
    "2416": {
      "op": "DUP4"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2419": {
      "op": "DUP8"
    },
    "2420": {
      "op": "ADD"
    },
    "2421": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2423": {
      "op": "DUP4"
    },
    "2424": {
      "op": "ADD"
    },
    "2425": {
      "op": "CALLDATACOPY"
    },
    "2426": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2428": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2430": {
      "op": "DUP6"
    },
    "2431": {
      "op": "DUP4"
    },
    "2432": {
      "op": "ADD"
    },
    "2433": {
      "op": "ADD"
    },
    "2434": {
      "op": "MSTORE"
    },
    "2435": {
      "op": "DUP1"
    },
    "2436": {
      "op": "SWAP5"
    },
    "2437": {
      "op": "POP"
    },
    "2438": {
      "op": "POP"
    },
    "2439": {
      "op": "POP"
    },
    "2440": {
      "op": "POP"
    },
    "2441": {
      "op": "POP"
    },
    "2442": {
      "op": "SWAP3"
    },
    "2443": {
      "op": "SWAP2"
    },
    "2444": {
      "op": "POP"
    },
    "2445": {
      "op": "POP"
    },
    "2446": {
      "jump": "o",
      "op": "JUMP"
    },
    "2447": {
      "op": "JUMPDEST"
    },
    "2448": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2450": {
      "op": "DUP1"
    },
    "2451": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2453": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2455": {
      "op": "DUP5"
    },
    "2456": {
      "op": "DUP7"
    },
    "2457": {
      "op": "SUB"
    },
    "2458": {
      "op": "SLT"
    },
    "2459": {
      "op": "ISZERO"
    },
    "2460": {
      "op": "PUSH2",
      "value": "0x9A4"
    },
    "2463": {
      "op": "JUMPI"
    },
    "2464": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2466": {
      "op": "DUP1"
    },
    "2467": {
      "op": "REVERT"
    },
    "2468": {
      "op": "JUMPDEST"
    },
    "2469": {
      "op": "DUP4"
    },
    "2470": {
      "op": "CALLDATALOAD"
    },
    "2471": {
      "op": "SWAP3"
    },
    "2472": {
      "op": "POP"
    },
    "2473": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2475": {
      "op": "DUP5"
    },
    "2476": {
      "op": "ADD"
    },
    "2477": {
      "op": "CALLDATALOAD"
    },
    "2478": {
      "op": "SWAP2"
    },
    "2479": {
      "op": "POP"
    },
    "2480": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2482": {
      "op": "DUP5"
    },
    "2483": {
      "op": "ADD"
    },
    "2484": {
      "op": "CALLDATALOAD"
    },
    "2485": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2494": {
      "op": "DUP2"
    },
    "2495": {
      "op": "GT"
    },
    "2496": {
      "op": "ISZERO"
    },
    "2497": {
      "op": "PUSH2",
      "value": "0x9C9"
    },
    "2500": {
      "op": "JUMPI"
    },
    "2501": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2503": {
      "op": "DUP1"
    },
    "2504": {
      "op": "REVERT"
    },
    "2505": {
      "op": "JUMPDEST"
    },
    "2506": {
      "op": "PUSH2",
      "value": "0x9D5"
    },
    "2509": {
      "op": "DUP7"
    },
    "2510": {
      "op": "DUP3"
    },
    "2511": {
      "op": "DUP8"
    },
    "2512": {
      "op": "ADD"
    },
    "2513": {
      "op": "PUSH2",
      "value": "0x902"
    },
    "2516": {
      "jump": "i",
      "op": "JUMP"
    },
    "2517": {
      "op": "JUMPDEST"
    },
    "2518": {
      "op": "SWAP2"
    },
    "2519": {
      "op": "POP"
    },
    "2520": {
      "op": "POP"
    },
    "2521": {
      "op": "SWAP3"
    },
    "2522": {
      "op": "POP"
    },
    "2523": {
      "op": "SWAP3"
    },
    "2524": {
      "op": "POP"
    },
    "2525": {
      "op": "SWAP3"
    },
    "2526": {
      "jump": "o",
      "op": "JUMP"
    },
    "2527": {
      "op": "JUMPDEST"
    },
    "2528": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2530": {
      "op": "DUP1"
    },
    "2531": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2533": {
      "op": "DUP4"
    },
    "2534": {
      "op": "DUP6"
    },
    "2535": {
      "op": "SUB"
    },
    "2536": {
      "op": "SLT"
    },
    "2537": {
      "op": "ISZERO"
    },
    "2538": {
      "op": "PUSH2",
      "value": "0x9F2"
    },
    "2541": {
      "op": "JUMPI"
    },
    "2542": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2544": {
      "op": "DUP1"
    },
    "2545": {
      "op": "REVERT"
    },
    "2546": {
      "op": "JUMPDEST"
    },
    "2547": {
      "op": "DUP3"
    },
    "2548": {
      "op": "CALLDATALOAD"
    },
    "2549": {
      "op": "SWAP2"
    },
    "2550": {
      "op": "POP"
    },
    "2551": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2553": {
      "op": "DUP4"
    },
    "2554": {
      "op": "ADD"
    },
    "2555": {
      "op": "CALLDATALOAD"
    },
    "2556": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2565": {
      "op": "DUP2"
    },
    "2566": {
      "op": "GT"
    },
    "2567": {
      "op": "ISZERO"
    },
    "2568": {
      "op": "PUSH2",
      "value": "0xA10"
    },
    "2571": {
      "op": "JUMPI"
    },
    "2572": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2574": {
      "op": "DUP1"
    },
    "2575": {
      "op": "REVERT"
    },
    "2576": {
      "op": "JUMPDEST"
    },
    "2577": {
      "op": "PUSH2",
      "value": "0xA1C"
    },
    "2580": {
      "op": "DUP6"
    },
    "2581": {
      "op": "DUP3"
    },
    "2582": {
      "op": "DUP7"
    },
    "2583": {
      "op": "ADD"
    },
    "2584": {
      "op": "PUSH2",
      "value": "0x902"
    },
    "2587": {
      "jump": "i",
      "op": "JUMP"
    },
    "2588": {
      "op": "JUMPDEST"
    },
    "2589": {
      "op": "SWAP2"
    },
    "2590": {
      "op": "POP"
    },
    "2591": {
      "op": "POP"
    },
    "2592": {
      "op": "SWAP3"
    },
    "2593": {
      "op": "POP"
    },
    "2594": {
      "op": "SWAP3"
    },
    "2595": {
      "op": "SWAP1"
    },
    "2596": {
      "op": "POP"
    },
    "2597": {
      "jump": "o",
      "op": "JUMP"
    },
    "2598": {
      "op": "JUMPDEST"
    },
    "2599": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2601": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2603": {
      "op": "DUP3"
    },
    "2604": {
      "op": "DUP5"
    },
    "2605": {
      "op": "SUB"
    },
    "2606": {
      "op": "SLT"
    },
    "2607": {
      "op": "ISZERO"
    },
    "2608": {
      "op": "PUSH2",
      "value": "0xA38"
    },
    "2611": {
      "op": "JUMPI"
    },
    "2612": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2614": {
      "op": "DUP1"
    },
    "2615": {
      "op": "REVERT"
    },
    "2616": {
      "op": "JUMPDEST"
    },
    "2617": {
      "op": "DUP2"
    },
    "2618": {
      "op": "CALLDATALOAD"
    },
    "2619": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2628": {
      "op": "DUP2"
    },
    "2629": {
      "op": "GT"
    },
    "2630": {
      "op": "ISZERO"
    },
    "2631": {
      "op": "PUSH2",
      "value": "0xA4F"
    },
    "2634": {
      "op": "JUMPI"
    },
    "2635": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2637": {
      "op": "DUP1"
    },
    "2638": {
      "op": "REVERT"
    },
    "2639": {
      "op": "JUMPDEST"
    },
    "2640": {
      "op": "PUSH2",
      "value": "0xA5B"
    },
    "2643": {
      "op": "DUP5"
    },
    "2644": {
      "op": "DUP3"
    },
    "2645": {
      "op": "DUP6"
    },
    "2646": {
      "op": "ADD"
    },
    "2647": {
      "op": "PUSH2",
      "value": "0x902"
    },
    "2650": {
      "jump": "i",
      "op": "JUMP"
    },
    "2651": {
      "op": "JUMPDEST"
    },
    "2652": {
      "op": "SWAP5"
    },
    "2653": {
      "op": "SWAP4"
    },
    "2654": {
      "op": "POP"
    },
    "2655": {
      "op": "POP"
    },
    "2656": {
      "op": "POP"
    },
    "2657": {
      "op": "POP"
    },
    "2658": {
      "jump": "o",
      "op": "JUMP"
    },
    "2659": {
      "op": "JUMPDEST"
    },
    "2660": {
      "op": "DUP1"
    },
    "2661": {
      "op": "CALLDATALOAD"
    },
    "2662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2666": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2668": {
      "op": "SHL"
    },
    "2669": {
      "op": "SUB"
    },
    "2670": {
      "op": "DUP2"
    },
    "2671": {
      "op": "AND"
    },
    "2672": {
      "op": "DUP2"
    },
    "2673": {
      "op": "EQ"
    },
    "2674": {
      "op": "PUSH2",
      "value": "0xA7A"
    },
    "2677": {
      "op": "JUMPI"
    },
    "2678": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2680": {
      "op": "DUP1"
    },
    "2681": {
      "op": "REVERT"
    },
    "2682": {
      "op": "JUMPDEST"
    },
    "2683": {
      "op": "SWAP2"
    },
    "2684": {
      "op": "SWAP1"
    },
    "2685": {
      "op": "POP"
    },
    "2686": {
      "jump": "o",
      "op": "JUMP"
    },
    "2687": {
      "op": "JUMPDEST"
    },
    "2688": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2690": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2692": {
      "op": "DUP3"
    },
    "2693": {
      "op": "DUP5"
    },
    "2694": {
      "op": "SUB"
    },
    "2695": {
      "op": "SLT"
    },
    "2696": {
      "op": "ISZERO"
    },
    "2697": {
      "op": "PUSH2",
      "value": "0xA91"
    },
    "2700": {
      "op": "JUMPI"
    },
    "2701": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2703": {
      "op": "DUP1"
    },
    "2704": {
      "op": "REVERT"
    },
    "2705": {
      "op": "JUMPDEST"
    },
    "2706": {
      "op": "PUSH2",
      "value": "0xA9A"
    },
    "2709": {
      "op": "DUP3"
    },
    "2710": {
      "op": "PUSH2",
      "value": "0xA63"
    },
    "2713": {
      "jump": "i",
      "op": "JUMP"
    },
    "2714": {
      "op": "JUMPDEST"
    },
    "2715": {
      "op": "SWAP4"
    },
    "2716": {
      "op": "SWAP3"
    },
    "2717": {
      "op": "POP"
    },
    "2718": {
      "op": "POP"
    },
    "2719": {
      "op": "POP"
    },
    "2720": {
      "jump": "o",
      "op": "JUMP"
    },
    "2721": {
      "op": "JUMPDEST"
    },
    "2722": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2724": {
      "op": "DUP1"
    },
    "2725": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2727": {
      "op": "DUP4"
    },
    "2728": {
      "op": "DUP6"
    },
    "2729": {
      "op": "SUB"
    },
    "2730": {
      "op": "SLT"
    },
    "2731": {
      "op": "ISZERO"
    },
    "2732": {
      "op": "PUSH2",
      "value": "0xAB4"
    },
    "2735": {
      "op": "JUMPI"
    },
    "2736": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2738": {
      "op": "DUP1"
    },
    "2739": {
      "op": "REVERT"
    },
    "2740": {
      "op": "JUMPDEST"
    },
    "2741": {
      "op": "PUSH2",
      "value": "0xABD"
    },
    "2744": {
      "op": "DUP4"
    },
    "2745": {
      "op": "PUSH2",
      "value": "0xA63"
    },
    "2748": {
      "jump": "i",
      "op": "JUMP"
    },
    "2749": {
      "op": "JUMPDEST"
    },
    "2750": {
      "op": "SWAP5"
    },
    "2751": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2753": {
      "op": "SWAP4"
    },
    "2754": {
      "op": "SWAP1"
    },
    "2755": {
      "op": "SWAP4"
    },
    "2756": {
      "op": "ADD"
    },
    "2757": {
      "op": "CALLDATALOAD"
    },
    "2758": {
      "op": "SWAP4"
    },
    "2759": {
      "op": "POP"
    },
    "2760": {
      "op": "POP"
    },
    "2761": {
      "op": "POP"
    },
    "2762": {
      "jump": "o",
      "op": "JUMP"
    },
    "2763": {
      "op": "JUMPDEST"
    },
    "2764": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2766": {
      "op": "DUP1"
    },
    "2767": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2769": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2771": {
      "op": "DUP5"
    },
    "2772": {
      "op": "DUP7"
    },
    "2773": {
      "op": "SUB"
    },
    "2774": {
      "op": "SLT"
    },
    "2775": {
      "op": "ISZERO"
    },
    "2776": {
      "op": "PUSH2",
      "value": "0xAE0"
    },
    "2779": {
      "op": "JUMPI"
    },
    "2780": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2782": {
      "op": "DUP1"
    },
    "2783": {
      "op": "REVERT"
    },
    "2784": {
      "op": "JUMPDEST"
    },
    "2785": {
      "op": "PUSH2",
      "value": "0xAE9"
    },
    "2788": {
      "op": "DUP5"
    },
    "2789": {
      "op": "PUSH2",
      "value": "0xA63"
    },
    "2792": {
      "jump": "i",
      "op": "JUMP"
    },
    "2793": {
      "op": "JUMPDEST"
    },
    "2794": {
      "op": "SWAP6"
    },
    "2795": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2797": {
      "op": "DUP6"
    },
    "2798": {
      "op": "ADD"
    },
    "2799": {
      "op": "CALLDATALOAD"
    },
    "2800": {
      "op": "SWAP6"
    },
    "2801": {
      "op": "POP"
    },
    "2802": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2804": {
      "op": "SWAP1"
    },
    "2805": {
      "op": "SWAP5"
    },
    "2806": {
      "op": "ADD"
    },
    "2807": {
      "op": "CALLDATALOAD"
    },
    "2808": {
      "op": "SWAP4"
    },
    "2809": {
      "op": "SWAP3"
    },
    "2810": {
      "op": "POP"
    },
    "2811": {
      "op": "POP"
    },
    "2812": {
      "op": "POP"
    },
    "2813": {
      "jump": "o",
      "op": "JUMP"
    },
    "2814": {
      "op": "JUMPDEST"
    },
    "2815": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2817": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2819": {
      "op": "DUP3"
    },
    "2820": {
      "op": "DUP5"
    },
    "2821": {
      "op": "SUB"
    },
    "2822": {
      "op": "SLT"
    },
    "2823": {
      "op": "ISZERO"
    },
    "2824": {
      "op": "PUSH2",
      "value": "0xB10"
    },
    "2827": {
      "op": "JUMPI"
    },
    "2828": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2830": {
      "op": "DUP1"
    },
    "2831": {
      "op": "REVERT"
    },
    "2832": {
      "op": "JUMPDEST"
    },
    "2833": {
      "op": "POP"
    },
    "2834": {
      "op": "CALLDATALOAD"
    },
    "2835": {
      "op": "SWAP2"
    },
    "2836": {
      "op": "SWAP1"
    },
    "2837": {
      "op": "POP"
    },
    "2838": {
      "jump": "o",
      "op": "JUMP"
    },
    "2839": {
      "op": "JUMPDEST"
    },
    "2840": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2842": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2844": {
      "op": "DUP3"
    },
    "2845": {
      "op": "DUP5"
    },
    "2846": {
      "op": "SUB"
    },
    "2847": {
      "op": "SLT"
    },
    "2848": {
      "op": "ISZERO"
    },
    "2849": {
      "op": "PUSH2",
      "value": "0xB29"
    },
    "2852": {
      "op": "JUMPI"
    },
    "2853": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2855": {
      "op": "DUP1"
    },
    "2856": {
      "op": "REVERT"
    },
    "2857": {
      "op": "JUMPDEST"
    },
    "2858": {
      "op": "POP"
    },
    "2859": {
      "op": "MLOAD"
    },
    "2860": {
      "op": "SWAP2"
    },
    "2861": {
      "op": "SWAP1"
    },
    "2862": {
      "op": "POP"
    },
    "2863": {
      "jump": "o",
      "op": "JUMP"
    },
    "2864": {
      "op": "JUMPDEST"
    },
    "2865": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2867": {
      "op": "DUP1"
    },
    "2868": {
      "op": "DUP3"
    },
    "2869": {
      "op": "MSTORE"
    },
    "2870": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2872": {
      "op": "SWAP1"
    },
    "2873": {
      "op": "DUP3"
    },
    "2874": {
      "op": "ADD"
    },
    "2875": {
      "op": "MSTORE"
    },
    "2876": {
      "op": "PUSH32",
      "value": "0x57616C6C657420646F6573206E6F74206861766520656E6F75676820746F6B65"
    },
    "2909": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2911": {
      "op": "DUP3"
    },
    "2912": {
      "op": "ADD"
    },
    "2913": {
      "op": "MSTORE"
    },
    "2914": {
      "op": "PUSH1",
      "value": "0x37"
    },
    "2916": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "2918": {
      "op": "SHL"
    },
    "2919": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2921": {
      "op": "DUP3"
    },
    "2922": {
      "op": "ADD"
    },
    "2923": {
      "op": "MSTORE"
    },
    "2924": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2926": {
      "op": "ADD"
    },
    "2927": {
      "op": "SWAP1"
    },
    "2928": {
      "jump": "o",
      "op": "JUMP"
    },
    "2929": {
      "op": "JUMPDEST"
    },
    "2930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2932": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2934": {
      "op": "DUP3"
    },
    "2935": {
      "op": "DUP5"
    },
    "2936": {
      "op": "SUB"
    },
    "2937": {
      "op": "SLT"
    },
    "2938": {
      "op": "ISZERO"
    },
    "2939": {
      "op": "PUSH2",
      "value": "0xB83"
    },
    "2942": {
      "op": "JUMPI"
    },
    "2943": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2945": {
      "op": "DUP1"
    },
    "2946": {
      "op": "REVERT"
    },
    "2947": {
      "op": "JUMPDEST"
    },
    "2948": {
      "op": "DUP2"
    },
    "2949": {
      "op": "MLOAD"
    },
    "2950": {
      "op": "DUP1"
    },
    "2951": {
      "op": "ISZERO"
    },
    "2952": {
      "op": "ISZERO"
    },
    "2953": {
      "op": "DUP2"
    },
    "2954": {
      "op": "EQ"
    },
    "2955": {
      "op": "PUSH2",
      "value": "0xA9A"
    },
    "2958": {
      "op": "JUMPI"
    },
    "2959": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2961": {
      "op": "DUP1"
    },
    "2962": {
      "op": "REVERT"
    },
    "2963": {
      "op": "JUMPDEST"
    },
    "2964": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2966": {
      "op": "DUP1"
    },
    "2967": {
      "op": "DUP3"
    },
    "2968": {
      "op": "MSTORE"
    },
    "2969": {
      "op": "DUP2"
    },
    "2970": {
      "op": "DUP2"
    },
    "2971": {
      "op": "ADD"
    },
    "2972": {
      "op": "MSTORE"
    },
    "2973": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "3006": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3008": {
      "op": "DUP3"
    },
    "3009": {
      "op": "ADD"
    },
    "3010": {
      "op": "MSTORE"
    },
    "3011": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3013": {
      "op": "ADD"
    },
    "3014": {
      "op": "SWAP1"
    },
    "3015": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "77459b3948781f2e0d6807b4a22d39c5a0e353d7",
  "source": "// contracts/LabradoWallet.sol\n// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract LabradoWallet is Ownable {\n    address public token;\n    mapping(uint256 => bool) private usedNonce;\n    address private signer;\n\n    event TokenWithdrewWithSignature(\n        address indexed receiver,\n        uint256 amount,\n        uint256 indexed nonce\n    );\n    event TokenWithdrewByOwner(address indexed receiver, uint256 amount);\n    event SignerUpdated(\n        address indexed previousSigner,\n        address indexed newSigner\n    );\n\n    constructor(address _token, address _signer) {\n        signer = _signer;\n        token = _token;\n    }\n\n    function updateSigner(address _newSigner) public onlyOwner {\n        require(_newSigner != address(0), \"New owner is the zero address\");\n        address oldSigner = signer;\n        signer = _newSigner;\n        emit SignerUpdated(oldSigner, _newSigner);\n    }\n\n    function getMessageHash(\n        address _to,\n        uint256 _amount,\n        uint256 _nonce\n    ) public pure returns (bytes32) {\n        return keccak256(abi.encodePacked(_to, _amount, _nonce));\n    }\n\n    function getEthSignedMessageHash(bytes32 _messageHash)\n        public\n        pure\n        returns (bytes32)\n    {\n        return\n            keccak256(\n                abi.encodePacked(\n                    \"\\x19Ethereum Signed Message:\\n32\",\n                    _messageHash\n                )\n            );\n    }\n\n    function withdrawTokenWithSignature(\n        uint256 _amount,\n        uint256 _nonce,\n        bytes memory _signature\n    ) public {\n        require(!usedNonce[_nonce], \"This signature already used!\");\n        bytes32 messageHash = getMessageHash(msg.sender, _amount, _nonce);\n        bytes32 ethSignedMessageHash = getEthSignedMessageHash(messageHash);\n\n        require(\n            recoverSigner(ethSignedMessageHash, _signature) == signer,\n            \"Invalid signature\"\n        );\n        require(\n            IERC20(token).balanceOf(address(this)) > _amount,\n            \"Wallet does not have enough token\"\n        );\n        usedNonce[_nonce] = true;\n        IERC20(token).transfer(msg.sender, _amount);\n        emit TokenWithdrewWithSignature(msg.sender, _amount, _nonce);\n    }\n\n    function withdrawTokenByOwner(address _to, uint256 _amount)\n        public\n        onlyOwner\n    {\n        require(\n            IERC20(token).balanceOf(address(this)) > _amount,\n            \"Wallet does not have enough token\"\n        );\n        IERC20(token).transfer(_to, _amount);\n        emit TokenWithdrewByOwner(_to, _amount);\n    }\n\n    function recoverSigner(\n        bytes32 _ethSignedMessageHash,\n        bytes memory _signature\n    ) public pure returns (address) {\n        (bytes32 r, bytes32 s, uint8 v) = splitSignature(_signature);\n\n        return ecrecover(_ethSignedMessageHash, v, r, s);\n    }\n\n    function splitSignature(bytes memory sig)\n        public\n        pure\n        returns (\n            bytes32 r,\n            bytes32 s,\n            uint8 v\n        )\n    {\n        require(sig.length == 65, \"invalid signature length\");\n\n        assembly {\n            // first 32 bytes, after the length prefix\n            r := mload(add(sig, 32))\n            // second 32 bytes\n            s := mload(add(sig, 64))\n            // final byte (first byte of the next 32 bytes)\n            v := byte(0, mload(add(sig, 96)))\n        }\n    }\n}\n",
  "sourceMap": "200:3302:3:-:0;;;657:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:2;921:18:0;:32::i;:::-;712:6:3;:16;;-1:-1:-1;;;;;712:16:3;;;-1:-1:-1;;;;;;712:16:3;;;;;;;;738:14;;;;;;;;;;;;;;200:3302;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:177:4:-;93:13;;-1:-1:-1;;;;;135:31:4;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;200:3302:3;;;;;;",
  "sourcePath": "contracts/LabradoWallet.sol",
  "type": "contract"
}